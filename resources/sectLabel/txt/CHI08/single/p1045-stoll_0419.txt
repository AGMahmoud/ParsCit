CHI 2008 Proceedings · Am I Safe	April 5-10, 2008 · Florence, Italy
shown in Figure 1, blue cubes (representing window- 
owning processes) are connected via arrows to each of the 
windows on the rotated desktop. Directly beneath them are 
the non-window-owning processes, referred to as ‘back-
ground’ processes. On the right, in the ‘external’ region, 
are representations of remote computers that are connected 
via arrows to the process with which they are communicat-
ing. However, before the remote computers can connect to 
the user’s system, a connection request is given to the user 
with options to ‘Allow’ or ‘Forbid’ the connection. Also, in 
the lower right corner is a ‘More Info’ space providing 
brief descriptions when the user hovers over the various 
visual elements.
Processes
Processes are arranged either floating parallel to the rotated 
desktop or lying on the ground, depending on whether they 
own windows (‘foreground’ processes) or not (‘back-
ground’). To highlight the difference between them, the 
foreground processes are larger and in blue; the back-
ground processes are smaller and in green. This difference 
in representation was the result of our earlier formative 
user studies: we found that users preferred significant 
visual differences between the process types.
To avoid deluging users with processes, only certain ones 
are shown: 1) we show all processes that own windows as 
we want to suggest to users that all of their interaction with 
the computer is mediated by processes; 2) we show all 
processes that have ever connected to the network; and 3) 
we cull any process that is a known-safe component of the 
Windows OS, unless it is being controlled by another, 
untrusted process.
Much of the security-related, system information provided 
is actually conveyed with the process cube. On its face is 
the name of the executable from which it was started. 
There is also a small square, a rectangular bar graph, and a 
gauge (Figure 2a). The colored square indicates whether 
the vendor of the executable could be verified (green for 
yes, yellow for no); the bar graph indicates how long the 
executable has been installed on the user’s system; and the 
gauge indicates both current and average CPU usage.
These three indicators provide users with a fast way of 
judging if a process is behaving abnormally. Part of Ses-
ame’s design intent is to help users identify abnormal 
behavior by developing a sense of what normal behavior 
looks like via the three indicators. To augment their ability 
to have a sense of ‘normal’ and in keeping with the safe- 
staging principle [17], we also use in-place semantic 
zooming, allowing users to learn more information when 
they want. When users hover over a process cube with the 
mouse, it expands slightly to show small explanatory text 
labels next to each of the glyphs on the cube’s face (Figure 
2b). To obtain an even more complete explanation, users 
can click the cube, expanding it to a full-sized representa-
tion, which also contains an editable list of security policies 
applied to the process (Figure 2c). Consequently, users can
Figure 2a: unexpanded	Figure 2b: view of process
process	when hovered over
Figure 2c: process when clicked upon
Figure 3b: Process-to-remote system arrow
visually determine whether a given process’ characteristics 
are unusual, then zoom in to learn what they actually mean.
Coming out from the edges of processes are wide arrows 
joining them to the windows they own and the remote 
computers with which they are communicating (Figures 3a, 
3b). The intention here is to connect—both conceptually 
and diagrammatically—concepts in the Sesame interface 
with familiar related concepts on the user’s desktop and in 
the real world. The arrows are rendered in bright colors 
with an extruded, gradated appearance to draw attention 
and make them feel concrete. We chose double-headed 
arrows to imply that information flows both ways.
Remote Computers
The remote computers that act as either servers or, less 
likely, clients to the user’s computer are represented as 
stacked rectangular tiles on the right of the screen. In 
earlier versions of Sesame, we tried to depict the remote 
computers as actual concrete renderings of computers; but 
as it was not clear to users that these were separate from 
their PCs. Users tended to feel that a better way to suggest 
distantness would be to use maps, which prompted us to 
render remote computers as abstract map images overlaid 
with pointers to the putative location of the remote system. 
The arrows leading from the processes to the remote 
system tiles terminate over the geography of the remote 
system, and the panels include a textual description (e.g., 
“Remote computer owned by XYZ Corp”).
Figure 3a: Process-to-window arrow
1049
