title ||| A Machine Learning Based Approach for Table Detection |XML| xmlLoc_0 xmlAlign_left xmlFontFace_common xmlFontFaceChange_begin xmlFontSize_largest-1 xmlFontSizeChange_begin xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
title ||| on The Web |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_largest-1 xmlFontSizeChange_no xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
author ||| Yalin Wang |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
affiliation ||| Intelligent Systems Laboratory |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
affiliation ||| Dept. of Electrical Engineering |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
affiliation ||| Univ. of Washington |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
address ||| Seattle, WA 98195 US |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
email ||| ylwang@u.washington.edu |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
author ||| Jianying Hu |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
affiliation ||| Avaya Labs Research |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
address ||| 233, Mount Airy Road |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
address ||| Basking Ridge, NJ 07920 US |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
email ||| jianhu@avaya.com |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
sectionHeader ||| ABSTRACT |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Table is a commonly used presentation scheme, especially |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| for describing relational information. However, table under- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| standing remains an open problem. In this paper, we con- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| sider the problem of table detection in web documents. Its |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| potential applications include web mining, knowledge man- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| agement, and web content summarization and delivery to |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| narrow-bandwidth devices. We describe a machine learning |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| based approach to classify each given table entity as either |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| genuine or non-genuine. Various features reflecting the lay- |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| out as well as content characteristics of tables are studied. |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| In order to facilitate the training and evaluation of our |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| table classifier, we designed a novel web document table |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ground truthing protocol and used it to build a large ta- |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ble ground truth database. The database consists of 1,393 |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| HTML files collected from hundreds of different web sites |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| and contains 11,477 leaf &lt;TABLE&gt; elements, out of which |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| 1,740 are genuine tables. Experiments were conducted us- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ing the cross validation method and an F-measure of 95.89% |XML| xmlLoc_4 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| was achieved. |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
sectionHeader ||| Categories and Subject Descriptors |XML| xmlLoc_4 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
category ||| H.4.3 [Information Systems Applications]: Communi- |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
category ||| cations Applications Information browsers |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
sectionHeader ||| General Terms |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
keyword ||| Algorithms |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
sectionHeader ||| Keywords |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
keyword ||| Table Detection, Layout Analysis, Machine Learning, Deci- |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
keyword ||| sion tree, Support Vector Machine, Information Retrieval |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
sectionHeader ||| 1. INTRODUCTION |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| The increasing ubiquity of the Internet has brought about |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| a constantly increasing amount of online publications. As |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| a compact and efficient way to present relational informa- |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tion, tables are used frequently in web documents. Since |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tables are inherently concise as well as information rich, the |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| automatic understanding of tables has many applications in- |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cluding knowledge management, information retrieval, web |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
copyright ||| Copyright is held by the author/owner(s). |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
note ||| WWW2002, May 7–11,2002, Honolulu, Hawaii, USA. |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
note ||| ACM 1-58113-449-5/02/0005. |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| mining, summarization, and content delivery to mobile de- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| vices. The processes of table understanding in web doc- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| uments include table detection, functional and structural |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| analysis and finally table interpretation [6]. In this paper, |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| we concentrate on the problem of table detection. The web |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| provides users with great possibilities to use their own style |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| of communication and expressions. In particular, people use |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| the &lt;TABLE&gt; tag not only for relational information display |XML| xmlLoc_2 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| but also to create any type of multiple-column layout to |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| facilitate easy viewing, thus the presence of the &lt;TABLE&gt; |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tag does not necessarily indicate the presence of a relational |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| table. In this paper, we define genuine tables to be docu- |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ment entities where a two dimensional grid is semantically |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| significant in conveying the logical relations among the cells |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| [10]. Conversely, Non-genuine tables are document entities |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| where &lt;TABLE&gt; tags are used as a mechanism for grouping |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| contents into clusters for easy viewing only. Figure 1 gives |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| a few examples of genuine and non-genuine tables. While |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| genuine tables in web documents could also be created with- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| out the use of &lt;TABLE&gt; tags at all, we do not consider such |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cases in this article as they seem very rare from our ex- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| perience. Thus, in this study, Table detection refers to the |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| technique which classifies a document entity enclosed by the |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| &lt;TABLE&gt;&lt;/TABLE&gt; tags as genuine or non-genuine tables. |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Several researchers have reported their work on web table |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| detection [2, 10, 6, 14]. In [2], Chen et al. used heuris- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tic rules and cell similarities to identify tables. They tested |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| their table detection algorithm on 918 tables from airline in- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| formation web pages and achieved an F-measure of 86.50%. |XML| xmlLoc_5 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Penn et al. proposed a set of rules for identifying genuinely |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| tabular information and news links in HTML documents |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| [10]. They tested their algorithm on 75 web site front-pages |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| and achieved an F-measure of 88.05%. Yoshida et al. pro- |XML| xmlLoc_5 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| posed a method to integrate WWW tables according to the |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| category of objects presented in each table [14]. Their data |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| set contains 35,232 table tags gathered from the web. They |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| estimated their algorithm parameters using all of table data |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| and then evaluated algorithm accuracy on 175 of the tables. |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| The average F-measure reported in their paper is 82.65%. |XML| xmlLoc_6 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| These previous methods all relied on heuristic rules and were |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| only tested on a database that is either very small [10], or |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| highly domain specific [2]. Hurst mentioned that a Naive |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Bayes classifier algorithm produced adequate results but no |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| detailed algorithm and experimental information was pro- |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| vided [6]. |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| We propose a new machine learning based approach for |XML| xmlLoc_7 xmlAlign_right xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
page ||| 242 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figureCaption ||| Figure 1: Examples of genuine and non-genuine tables. |XML| xmlLoc_3 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| table detection from generic web documents. In particu- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| lar, we introduce a set of novel features which reflect the |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| layout as well as content characteristics of tables. These |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| features are used in classifiers trained on thousands of ex- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| amples. To facilitate the training and evaluation of the table |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| classifiers, we designed a novel web document table ground |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| truthing protocol and used it to build a large table ground |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| truth database. The database consists of 1,393 HTML files |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| collected from hundreds of different web sites and contains |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| 11,477 leaf &lt;TABLE&gt; elements, out of which 1,740 are gen- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| uine tables. Experiments on this database using the cross |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| validation method demonstrate significant performance im- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| provements over previous methods. |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| The rest of the paper is organized as follows. We describe |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| our feature set in Section 2, followed by a brief discussion |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| of the classifiers we experimented with in Section 3. In Sec- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tion 4, we present a novel table ground truthing protocol |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| and explain how we built our database. Experimental re- |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| sults are then reported in Section 5 and we conclude with |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| future directions in Section 6. |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
sectionHeader ||| 2. FEATURES FOR WEB TABLE |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
sectionHeader ||| DETECTION |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Feature selection is a crucial step in any machine learning |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| based methods. In our case, we need to find a combination |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| of features that together provide significant separation be- |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tween genuine and non-genuine tables while at the same time |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| constrain the total number of features to avoid the curse of |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| dimensionality. Past research has clearly indicated that lay- |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| out and content are two important aspects in table under- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| standing [6]. Our features were designed to capture both of |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| these aspects. In particular, we developed 16 features which |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| can be categorized into three groups: seven layout features, |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| eight content type features and one word group feature. In |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| the first two groups, we attempt to capture the global com- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| position of tables as well as the consistency within the whole |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| table and across rows and columns. The last feature looks at |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| words used in tables and is derived directly from the vector |XML| xmlLoc_4 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| space model commonly used in Information Retrieval. |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Before feature extraction, each HTML document is first |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| parsed into a document hierarchy tree using Java Swing |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| XML parser with W3C HTML 3.2 DTD [10]. A &lt;TABLE&gt; |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| node is said to be a leaf table if and only if there are no |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| &lt;TABLE&gt; nodes among its children [10]. Our experience in- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| dicates that almost all genuine tables are leaf tables. Thus |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| in this study only leaf tables are considered candidates for |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| genuine tables and are passed on to the feature extraction |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| stage. In the following we describe each feature in detail. |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
subsectionHeader ||| 2.1 Layout Features |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| In HTML documents, although tags like &lt;TR&gt; and &lt;TD&gt; |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| (or &lt;TH&gt;) may be assumed to delimit table rows and table |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cells, they are not always reliable indicators of the number |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| of rows and columns in a table. Variations can be caused |XML| xmlLoc_6 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| by spanning cells created using &lt;ROWSPAN&gt; and &lt;COLSPAN&gt; |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tags. Other tags such as &lt;BR&gt; could be used to move con- |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tent into the next row. Therefore to extract layout features |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| reliably one can not simply count the number of &lt;TR&gt;&apos;s and |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| &lt;TD&gt;&apos;s. For this purpose, we maintain a matrix to record all |XML| xmlLoc_7 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
page ||| 243 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| the cell spanning information and serve as a pseudo render- |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ing of the table. Layout features based on row or column |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| numbers are then computed from this matrix. |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Given a table T, assuming its numbers of rows and columns |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| are rn and cn respectively, we compute the following layout |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| features: |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| •	Average number of columns, computed as the average |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| number of cells per row: |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
bodyText ||| Here LCcl is defined as: LCcl = 0.5 — D, where D = |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| min{lcl — mil�mi,1.0}. Intuitively, LCcl measures the |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| degree of consistency between cl and the mean cell |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| length, with —0.5 indicating extreme inconsistency and |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| 0.5 indicating extreme consistency. When most cells |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| within Ri are consistent, the cumulative measure CLCi |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| is positive, indicating a more or less consistent row. |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| 3. Take the average across all rows: |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| ci, |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| c = |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 1 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| rn |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| Xrn |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| CLCr = 1 |XML| xmlLoc_1 xmlAlign_right xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| r |XML| xmlLoc_1 xmlAlign_right xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| Xr CLCi . |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| where ci is the number of cells in row i, i = 1, ..., rn, |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
listItem ||| •	Standard deviation of number of columns: |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_yes xmlPara_new
equation ||| (ci — c) x (ci — c); |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
listItem ||| •	Average number of rows, computed as the average |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| number of cells per column: |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
bodyText ||| where ri is the number of cells in column i, i = 1, ..., cn, |XML| xmlLoc_3 xmlAlign_right xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
listItem ||| •	Standard deviation of number of rows: |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_yes xmlPara_new
equation ||| (ri — r) x (ri — r). |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Since the majority of tables in web documents contain |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| characters, we compute three more layout features based on |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cell length in terms of number of characters: |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| •	Average overall cell length: cl = en Pin1 cli, where en |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| is the total number of cells in a given table and cli is |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| the length of cell i, i = 1, ... , en, |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| •	Standard deviation of cell length: |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
equation ||| (cli — cl) x (cli — cl)� |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
listItem ||| •	Average Cumulative length consistency, CLC. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_yes xmlPara_new
bodyText ||| The last feature is designed to measure the cell length con- |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| sistency along either row or column directions. It is inspired |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| by the fact that most genuine tables demonstrate certain |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| consistency either along the row or the column direction, |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| but usually not both, while non-genuine tables often show |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| no consistency in either direction. First, the average cumu- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| lative within-row length consistency, CLCr, is computed as |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| follows. Let the set of cell lengths of the cells from row i be |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Ri, i = 1, ... , r (considering only non-spanning cells): |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| 1. Compute the mean cell length, mi, for row Ri. |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| 2. Compute cumulative length consistency within each |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| Ri: |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
equation ||| CLCi = X LCcl . |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| clERi |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| After the within-row length consistency CLCr is com- |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| puted, the within-column length consistency CLCc is com- |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| puted in a similar manner. Finally, the overall cumulative |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| length consistency is computed as CLC = max(CLCr, CLCc). |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
subsectionHeader ||| 2.2 Content Type Features |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Web documents are inherently multi-media and has more |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| types of content than any traditional documents. For ex- |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ample, the content within a &lt;TABLE&gt; element could include |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| hyperlinks, images, forms, alphabetical or numerical strings, |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| etc. Because of the relational information it needs to convey, |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| a genuine table is more likely to contain alpha or numeri- |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cal strings than, say, images. The content type feature was |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| designed to reflect such characteristics. |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| We define the set of content types T = {Image, Form, |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Hyperlink, Alphabetical, Digit, Empty, Others}. Our content |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| type features include: |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| •	The histogram of content type for a given table. This |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| contributes 7 features to the feature set, |XML| xmlLoc_4 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| •	Average content type consistency, CTC. |XML| xmlLoc_4 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
bodyText ||| The last feature is similar to the cell length consistency fea- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ture. First, within-row content type consistency CTCr is |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| computed as follows. Let the set of cell type of the cells |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| from row i as Ti, i = 1,... , r (again, considering only non- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| spanning cells): |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| 1. Find the dominant type, DTi, for Ti. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| 2. Compute the cumulative type consistency with each |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| row Ri, i = 1,... ,r: |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
equation ||| CTCi = X D, |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| ctERi |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| where D = 1 if ct is equal to DTi and D = —1, other- |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| wise. |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| 3. Take the average across all rows: |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| CTCr = 1 |XML| xmlLoc_6 xmlAlign_right xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| r |XML| xmlLoc_7 xmlAlign_right xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| The within-column type consistency is then computed in |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| a similar manner. Finally, the overall cumulative type con- |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| sistency is computed as: CTC = max(CTCr, CTCc). |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| tiv |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_largest-1 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| dC = |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 1 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| rn |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| Xrn |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| ri, |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| r= |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 1 |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| rn |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| Xcn |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| vt uu |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| dR = |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 1 |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| cn |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| Xcn |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_largest0 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| tuuv |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_largest-1 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| dCL = |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 1 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| en |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| Xen |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| Xr CT Ci |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i�1 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
page ||| 244 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
subsectionHeader ||| 2.3 Word Group Feature |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| If we treat each table as a &quot;mini-document&quot; by itself, ta- |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ble classification can be viewed as a document categoriza- |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tion problem with two broad categories: genuine tables and |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| non-genuine tables. We designed the word group feature to |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| incorporate word content for table classification based on |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| techniques developed in information retrieval [7, 13]. |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| After morphing [11] and removing the infrequent words, |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| we obtain the set of words found in the training data, W. |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| We then construct weight vectors representing genuine and |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| non-genuine tables and compare that against the frequency |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| vector from each new incoming table. |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Let 3 represent the non-negative integer set. The follow- |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ing functions are defined on set W. |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| •	dfG : W —&gt; 3, where dfG (wi) is the number of genuine |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| tables which include word wi, i = 1, ..., 1W1; |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| •	t f G : W —&gt; 3, where t f G (wi) is the number of times |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| word wi, i =1,...,1W1, appears in genuine tables; |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| •	dfN : W —&gt; 3, where dfN(wi) is the number of non- |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| genuine tables which include word wi, i =1,...,1W1; |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| •	t f N : W —&gt; 3, where t f N (wi) is the number of times |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| word wi, i =1,...,1W1, appears in non-genuine tables. |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
listItem ||| •	t fT : W —&gt; 3, where t fT (wi) is the number of times |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
listItem ||| word wi, wi 2 W appears in a new test table. |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
bodyText ||| To simplify the notations, in the following discussion, we |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| will use dfGi, t fGi , df N i and t f Ni to represent dfG (wi), t f G (wi), |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| df N (wi) and t f N (wi), respectively. |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Let NG, NN be the number of genuine tables and non- |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| genuine tables in the training collection, respectively and let |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| C = max(NG, NN). Without loss of generality, we assume |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| NG =� 0 and NN =� 0. For each word wi in W, i = 1, ...,1W1, |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| two weights, pGi and pNi are computed: |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| N |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| tfGilog(N� fN +1), when df Ni :A 0 |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| tfGilog(Ni C+1), when df i = 0 |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| tfiNlog(NNN fG |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| G+1), when dfGi00 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| tfNilog(NNC+1),	when dfG=0 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| As can be seen from the formulas, the definitions of these |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| weights were derived from the traditional t f * idf measures |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| used in informational retrieval, with some adjustments made |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| for the particular problem at hand. |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Given a new incoming table, let us denote the set includ- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ing all the words in it as Wn. Since W is constructed using |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| thousands of tables, the words that are present in both W |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| and Wn are only a small subset of W. Based on the vector |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| space model, we define the similarity between weight vec- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tors representing genuine and non-genuine tables and the |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| frequency vector representing the incoming table as the cor- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| responding dot products. Since we only need to consider the |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| words that are present in both W and Wn, we first compute |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| the effective word set: We = W n Wn. Let the words in |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| We be represented as wmk, where mk,k = 1, ..., 1We1, are |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| indexes to the words from set W = fw1, w2, ..., wIWI g. we |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| define the following vectors: |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| •	Weight vector representing the genuine table group: |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_yes xmlPara_new
equation ||| i	pGmJ |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| GS= |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| U |XML| xmlLoc_0 xmlAlign_right xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| where U is the cosine normalization term: |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| where V is the cosine normalization term: |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| NN |XML| xmlLoc_2 xmlAlign_centered xmlFontFace_none xmlFontFaceChange_yes xmlFontSize_none xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pmk X pmk . |XML| xmlLoc_2 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
listItem ||| •	Frequency vector representing the new incoming table: |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_yes xmlPara_new
equation ||| &apos;i	T T	T |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| I	(tfml,tfmt,... tfT Wel I . |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Finally, the word group feature is defined as the ratio of |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| the two dot products: |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
sectionHeader ||| 3. CLASSIFICATION SCHEMES |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Various classification schemes have been widely used in |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| document categorization as well as web information retrieval |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| [13, 8]. For the table detection task, the decision tree classi- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| fier is particularly attractive as our features are highly non- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| homogeneous. We also experimented with Support Vector |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Machines (SVM), a relatively new learning approach which |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| has achieved one of the best performances in text catego- |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| rization [13]. |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
subsectionHeader ||| 3.1 Decision Tree |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Decision tree learning is one of the most widely used and |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| practical methods for inductive inference. It is a method |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| for approximating discrete-valued functions that is robust |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| to noisy data. |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Decision trees classify an instance by sorting it down the |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| tree from the root to some leaf node, which provides the clas- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| sification of the instance. Each node in a discrete-valued de- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cision tree specifies a test of some attribute of the instance, |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| and each branch descending from that node corresponds to |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| one of the possible values for this attribute. Continuous- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| valued decision attributes can be incorporated by dynami- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| cally defining new discrete-valued attributes that partition |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| the continuous attribute value into a discrete set of intervals |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| [9]. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| An implementation of the continuous-valued decision tree |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| described in [4] was used for our experiments. The decision |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tree is constructed using a training set of feature vectors with |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| true class labels. At each node, a discriminant threshold |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| tuuv |XML| xmlLoc_0 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_largest-2 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| IWeI |XML| xmlLoc_0 xmlAlign_right xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| X |XML| xmlLoc_0 xmlAlign_right xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| k=1 |XML| xmlLoc_1 xmlAlign_right xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| U= |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pGmk X pGmk. |XML| xmlLoc_0 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| �, |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_largest-2 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pmt  |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| V |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| , |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| N |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_none xmlFontFaceChange_yes xmlFontSize_none xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pmlWel |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| V |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| iNS= pNm�  |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| V |XML| xmlLoc_1 xmlAlign_right xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
listItem ||| •	Weight vector representing the non-genuine table group: |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
equation ||| i i |XML| xmlLoc_3 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| ,when IT . NS�= 0 |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i i |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 	1,	when IT . GS= 0 and |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i |XML| xmlLoc_3 xmlAlign_right xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| 	10,	when IT . |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i i |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| IT . NS= 0 |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| i |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| NS= 0 |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| � � |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| IT� GS |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| � � |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| IT&apos; NS |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| i	i |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| GS�=0and IT . |XML| xmlLoc_3 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| ����� |XML| xmlLoc_3 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_largest-2 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| ���� |XML| xmlLoc_3 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_largest-2 xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| wg = |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| �� |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_largest-2 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| � |XML| xmlLoc_4 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| G |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pi = |XML| xmlLoc_4 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| I |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_largest-2 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| N |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pi = |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| , |XML| xmlLoc_0 xmlAlign_right xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| G |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_none xmlFontFaceChange_yes xmlFontSize_none xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pmlWel |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| U |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| pmt  |XML| xmlLoc_0 xmlAlign_right xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| U |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| �, |XML| xmlLoc_0 xmlAlign_right xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_largest-2 xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| tuuv |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_largest-2 xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| V= |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| IWeI |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| X |XML| xmlLoc_2 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
equation ||| k=1 |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
page ||| 245 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| is chosen such that it minimizes an impurity value. The |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| learned discriminant function splits the training subset into |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| two subsets and generates two child nodes. The process is |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| repeated at each newly generated child node until a stopping |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| condition is satisfied, and the node is declared as a terminal |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| node based on a majority vote. The maximum impurity |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| reduction, the maximum depth of the tree, and minimum |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| number of samples are used as stopping conditions. |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
subsectionHeader ||| 3.2 SVM |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Support Vector Machines (SVM) are based on the Struc- |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| tural Risk Management principle from computational learn- |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ing theory [12]. The idea of structural risk minimization |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| is to find a hypothesis h for which the lowest true error is |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| guaranteed. The true error of h is the probability that h |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| will make an error on an unseen and randomly selected test |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| example. |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| The SVM method is defined over a vector space where the |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| goal is to find a decision surface that best separates the data |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| points in two classes. More precisely, the decision surface by |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| SVM for linearly separable space is a hyperplane which can |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| be written as |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| w�•x�—b=0 |XML| xmlLoc_2 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| where x� is an arbitrary data point and the vector w&quot; and |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| the constant b are learned from training data. Let D = |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| (yz, �xz) denote the training set, and yz E {+1, —1} be the |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| classification for �xz, the SVM problem is to find w� and b |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| that satisfies the following constraints: |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
equation ||| w� •�xz—b&gt;+1 for yz=+1 |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
equation ||| w�•�xz—b&lt;—1 for yz=—1 |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| while minimizing the vector 2-norm of �w. |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| The SVM problem in linearly separable cases can be effi- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ciently solved using quadratic programming techniques, while |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| the non-linearly separable cases can be solved by either in- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| troducing soft margin hyperplanes, or by mapping the orig- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| inal data vectors to a higher dimensional space where the |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| data points become linearly separable [12, 3]. |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| One reason why SVMs are very powerful is that they are |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| very universal learners. In their basic form, SVMs learn lin- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ear threshold functions. Nevertheless, by a simple &quot;plug-in&quot; |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| of an appropriate kernel function, they can be used to learn |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| polynomial classifiers, radial basis function (RBF) networks, |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| three-layer sigmoid neural nets, etc. [3]. |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| For our experiments, we used the SVMlzght system im- |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| plemented by Thorsten Joachims.1 |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
sectionHeader ||| 4. DATA COLLECTION AND TRUTHING |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Since there are no publicly available web table ground |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| truth database, researchers tested their algorithms in differ- |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ent data sets in the past [2, 10, 14]. However, their data |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| sets either had limited manually annotated table data (e.g., |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| 918 table tags in [2], 75 HTML pages in [10], 175 manually |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| annotated table tags in [14]), or were collected from some |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| specific domains (e.g., a set of tables selected from airline |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| information pages were used in [2]). To develop our machine |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| learning based table detection algorithm, we needed to build |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| a general web table ground truth database of significant size. |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
footnote ||| 1 http://svmlight.joachims.org |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
subsectionHeader ||| 4.1 Data Collection |XML| xmlLoc_0 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Instead of working within a specific domain, our goal of |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| data collection was to get tables of as many different varieties |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| as possible from the web. To accomplish this, we composed |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| a set of key words likely to indicate documents containing |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tables and used those key words to retrieve and download |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| web pages using the Google search engine. Three directo- |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ries on Google were searched: the business directory and |XML| xmlLoc_0 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| news directory using key words: {table, stock, bonds, |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| figure, schedule, weather, score, service, results, |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| value}, and the science directory using key words {table, |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| results, value}. A total of 2,851 web pages were down- |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| loaded in this manner and we ground truthed 1,393 HTML |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| pages out of these (chosen randomly among all the HTML |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| pages). These 1,393 HTML pages from around 200 web sites |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| comprise our database. |XML| xmlLoc_1 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
subsectionHeader ||| 4.2 Ground Truthing |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| There has been no previous report on how to systemati- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| cally generate web table ground truth data. To build a large |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| web table ground truth database, a simple, flexible and com- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| plete ground truth protocol is required. Figure 4.2(a) shows |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| the diagram of our ground truthing procedure. We created |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| a new Document Type Definition(DTD) which is a super- |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| set of W3C HTML 3.2 DTD. We added three attributes for |XML| xmlLoc_2 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| &lt;TABLE&gt; element, which are &quot;tabid&quot;, &quot;genuine table&quot; and |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| &quot;table title&quot;. The possible value of the second attribute is |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| yes or no and the value of the first and third attributes is a |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| string. We used these three attributes to record the ground |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| truth of each leaf &lt;TABLE&gt; node. The benefit of this design |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| is that the ground truth data is inside HTML file format. |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| We can use exactly the same parser to process the ground |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| truth data. |XML| xmlLoc_3 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| We developed a graphical user interface for web table |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| ground truthing using the Java [1] language. Figure 4.2(b) |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| is a snapshot of the interface. There are two windows. Af- |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ter reading an HTML file, the hierarchy of the HTML file is |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| shown in the left window. When an item is selected in the |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| hierarchy, the HTML source for the selected item is shown |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| in the right window. There is a panel below the menu bar. |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| The user can use the radio button to select either genuine |XML| xmlLoc_4 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| table or non-genuine table. The text window is used to input |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| table title. |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
subsectionHeader ||| 4.3 Database Description |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Our final table ground truth database consists of 1,393 |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| HTML pages collected from around 200 web sites. There |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| are a total of 14,609 &lt;TABLE&gt; nodes, including 11,477 leaf |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| &lt;TABLE&gt; nodes. Out of the 11,477 leaf &lt;TABLE&gt; nodes, |XML| xmlLoc_5 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| 1,740 are genuine tables and 9,737 are non-genuine tables. |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Not every genuine table has its title and only 1,308 genuine |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| tables have table titles. We also found at least 253 HTML |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| files have unmatched &lt;TABLE&gt;, &lt;/TABLE&gt; pairs or wrong |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| hierarchy, which demonstrates the noisy nature of web doc- |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| uments. |XML| xmlLoc_6 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
sectionHeader ||| 5. EXPERIMENTS |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| A hold-out method is used to evaluate our table classi- |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| fier. We randomly divided the data set into nine parts. |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| Each classifier was trained on eight parts and then tested |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| on the remaining one part. This procedure was repeated |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| nine times, each time with a different choice for the test |XML| xmlLoc_7 xmlAlign_none xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
page ||| 246 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| HTML File |XML| xmlLoc_0 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| Hierarchy |XML| xmlLoc_1 xmlAlign_centered xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| Adding attributes |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| Parser |XML| xmlLoc_1 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| HTML with attributes and unique |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| index to each table(ground truth) |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
figure ||| Validation |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| (a)	(b) |XML| xmlLoc_2 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
figureCaption ||| Figure 2: (a) The diagram of ground truthing procedure; (b) A snapshot of the ground truthing software. |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figureCaption ||| part. Then the combined nine part results are averaged to |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figureCaption ||| arrive at the overall performance measures [4]. |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
figureCaption ||| For the layout and content type features, this procedure |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
figureCaption ||| is straightforward. However it is more complicated for the |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
figureCaption ||| word group feature training. To compute wg for training |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
figureCaption ||| samples, we need to further divide the training set into two |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
figureCaption ||| groups, a larger one (7 parts) for the computation of the |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
figureCaption ||| weights pGi and pNi, i =1�...�jWj, and a smaller one (1 |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
none ||| i i i |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| part) for the computation of the vectors GS, NS, and IT. |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| This partition is again rotated to compute wg for each table |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| in the training set. |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
tableCaption ||| Table 1: Possible true- and detected-state combina- |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
tableCaption ||| tions for two classes. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
table ||| True Class	Assigned Class	 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_new
table ||| 	genuine table	non-genuine table |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| genuine table	Ngg	Ngn |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| non-genuine table	Nng	Nnn |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| lows: |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
table ||| Ngg	Ngg	R + P  |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
table ||| R	P 	 F Ngg + Ng&apos;	Ngg + Nng	= 2 |XML| xmlLoc_3 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| For comparison among different features and learning al- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| gorithms we report the performance measures when the best |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| F-measure is achieved. First, the performance of various fea- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| ture groups and their combinations were evaluated using the |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| decision tree classifier. The results are given in Table 2. |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
tableCaption ||| Table 2: Experimental results using various feature |XML| xmlLoc_4 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
tableCaption ||| groups and the decision tree classifier. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
table ||| 	L	T	LT	LTW |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_new
table ||| R (%)	87.24	90.80	94.20	94.25 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| P (%)	88.15	95.70	97.27	97.50 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| F (%)	87.70	93.25	95.73	95.88 |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| L: Layout only. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
table ||| T: Content type only. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
table ||| LT: Layout and content type. |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
table ||| LTW: Layout, content type and word group. |XML| xmlLoc_6 xmlAlign_left xmlFontFace_different xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| The output of each classifier is compared with the ground |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| truth and a contingency table is computed to indicate the |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| number of a particular class label that are identified as mem- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| bers of one of two classes. The rows of the contingency table |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| represent the true classes and the columns represent the as- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| signed classes. The cell at row r and column c is the number |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| of tables whose true class is r while its assigned class is c. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| The possible true- and detected-state combination is shown |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| in Table 1. Three performance measures Recall Rate(R), |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Precision Rate(P) and F-measure(F) are computed as fol- |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| As seen from the table, content type features performed |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| better than layout features as a single group, achieving an |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| F-measure of 93.25%. However, when the two groups were |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| combined the F-measure was improved substantially to 95.73%, |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| reconfirming the importance of combining layout and con- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| tent features in table detection. The addition of the word |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| group feature improved the F-measure slightly more to 95.88%. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Table 3 compares the performances of different learning |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| algorithms using the full feature set. The leaning algorithms |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| tested include the decision tree classifier and the SVM al- |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
page ||| 247 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| gorithm with two different kernels — linear and radial basis |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| function (RBF). |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
tableCaption ||| Table 3: Experimental results using different learn- |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
tableCaption ||| ing algorithms. |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
table ||| 	Tree	SVM (linear)	SVM (RBF) |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_new
table ||| R (%)	94.25	93.91	95.98 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| P (%)	97.50	91.39	95.81 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| F (%)	95.88	92.65	95.89 |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| As seen from the table, for this application the SVM with |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| radial basis function kernel performed much better than the |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| one with linear kernel. It achieved an F measure of 95.89%, |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| comparable to the 95.88% achieved by the decision tree clas- |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| sifier. |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
bodyText ||| Figure 3 shows two examples of correctly classified tables, |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| where Figure 3(a) is a genuine table and Figure 3(b) is a |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| non-genuine table. |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Figure 4 shows a few examples where our algorithm failed. |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| Figure 4(a) was misclassified as a non-genuine table, likely |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| because its cell lengths are highly inconsistent and it has |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| many hyperlinks which is unusual for genuine tables. The |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| reason why Figure 4(b) was misclassified as non-genuine is |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| more interesting. When we looked at its HTML source code, |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| we found it contains only two &lt;TR&gt; tags. All text strings |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| in one rectangular box are within one &lt;TD&gt; tag. Its author |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| used &lt;p&gt; tags to put them in different rows. This points |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| to the need for a more carefully designed pseudo-rendering |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| process. Figure 4(c) shows a non-genuine table misclassi- |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| fied as genuine. A close examination reveals that it indeed |XML| xmlLoc_3 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| has good consistency along the row direction. In fact, one |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| could even argue that this is indeed a genuine table, with |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| implicit row headers of Title, Name, Company Affiliation |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| and Phone Number. This example demonstrates one of the |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| most difficult challenges in table understanding, namely the |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| ambiguous nature of many table instances (see [5] for a more |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| detailed analysis on that). Figure 4(d) was also misclassi- |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| fied as a genuine table. This is a case where layout features |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| and the kind of shallow content features we used are not |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| enough deeper semantic analysis would be needed in or- |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| der to identify the lack of logical coherence which makes it |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| a non-genuine table. |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| For comparison, we tested the previously developed rule- |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| based system [10] on the same database. The initial re- |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| sults (shown in Table 4 under &quot;Original Rule Based&quot;) were |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| very poor. After carefully studying the results from the |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| initial experiment we realized that most of the errors were |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| caused by a rule imposing a hard limit on cell lengths in gen- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| uine tables. After deleting that rule the rule-based system |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| achieved much improved results (shown in Table 4 under |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| &quot;Modified Rule Based&quot;). However, the proposed machine |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| learning based method still performs considerably better in |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| comparison. This demonstrates that systems based on hand- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| crafted rules tend to be brittle and do not generalize well. |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| In this case, even after careful manual adjustment in a new |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| database, it still does not work as well as an automatically |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| trained classifier. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
figureCaption ||| Figure 3: Examples of correctly classified tables. |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figureCaption ||| (a): a genuine table; (b): a non-genuine table. |XML| xmlLoc_5 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
tableCaption ||| Table 4: Experimental results of a previously devel- |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
tableCaption ||| oped rule based system. |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
table ||| 	Original Rule Based	Modified Rule Based |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_new
table ||| R (%)	48.16	95.80 |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| P (%)	75.70	79.46 |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
table ||| F (%)	61.93	87.63 |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_yes xmlBullet_no xmlIndent_no xmlPara_same
page ||| 248 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figure ||| (a)	(b) |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
figure ||| (c)	(d) |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
figureCaption ||| Figure 4: Examples of misclassified tables. (a) and (b): Genuine tables misclassified as non-genuine; (c) and |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
figureCaption ||| (d): Non-genuine tables misclassified as genuine. |XML| xmlLoc_3 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_smaller xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_same
bodyText ||| A direct comparison to other previous results [2, 14] is |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| not possible currently because of the lack of access to their |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| system. However, our test database is clearly more general |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| and far larger than the ones used in [2] and [14], while our |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| precision and recall rates are both higher. |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
sectionHeader ||| 6. CONCLUSION AND FUTURE WORK |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
bodyText ||| Table detection in web documents is an interesting and |XML| xmlLoc_4 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| challenging problem with many applications. We present a |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| machine learning based table detection algorithm for HTML |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| documents. Layout features, content type features and word |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| group features were used to construct a novel feature set. |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Decision tree and SVM classifiers were then implemented |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| and tested in this feature space. We also designed a novel ta- |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| ble ground truthing protocol and used it to construct a large |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| web table ground truth database for training and testing. |XML| xmlLoc_5 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Experiments on this large database yielded very promising |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| results. |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| Our future work includes handling more different HTML |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| styles in pseudo-rendering, detecting table titles of the rec- |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| ognized genuine tables and developing a machine learning |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| based table interpretation algorithm. We would also like to |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| investigate ways to incorporate deeper language analysis for |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| both table detection and interpretation. |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
sectionHeader ||| 7. ACKNOWLEDGMENT |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
bodyText ||| We would like to thank Kathie Shipley for her help in |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
bodyText ||| collecting the web pages, and Amit Bagga for discussions on |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| vector space models. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
bodyText ||| 8. REFERENCES |XML| xmlLoc_4 xmlAlign_left xmlFontFace_different xmlFontFaceChange_yes xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_yes xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
reference ||| [1] M. Campione, K. Walrath, and A. Huml. The |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_yes xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| java(tm) tutorial: A short course on the basics (the |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| java(tm) series). |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [2] H.-H. Chen, S.-C. Tsai, and J.-H. Tsai. Mining tables |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| from large scale html texts. In Proc. 18th |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| International Conference on Computational |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
reference ||| Linguistics, Saabrucken, Germany, July 2000. |XML| xmlLoc_4 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
reference ||| [3] C. Cortes and V. Vapnik. Support-vector networks. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| Machine Learning, 20:273{296, August 1995. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [4] R. Haralick and L. Shapiro. Computer and Robot |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| Vision, volume 1. Addison Wesley, 1992. |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [5] J. Hu, R. Kashi, D. Lopresti, G. Nagy, and |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| G. Wilfong. Why table ground-truthing is hard. In |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_new
reference ||| Proc. 6th International Conference on Document |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
reference ||| Analysis and Recognition (ICDAR01), pages 129{133, |XML| xmlLoc_5 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
reference ||| Seattle, WA, USA, September 2001. |XML| xmlLoc_6 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_no xmlIndent_yes xmlPara_same
reference ||| [6] M. Hurst. Layout and language: Challenges for table |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| understanding on the web. In Proc. 1st International |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| Workshop on Web Document Analysis, pages 27{30, |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| Seattle, WA, USA, September 2001. |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [7] T. Joachims. A probabilistic analysis of the rocchio |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| algorithm with tfidf for text categorization. In Proc. |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| 14th International Conference on Machine Learning, |XML| xmlLoc_6 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| pages 143{151, Morgan Kaufmann, 1997. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [8] A. McCallum, K. Nigam, J. Rennie, and K. Seymore. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| Automating the construction of internet portals with |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| machine learning. In Information Retrieval Journal, |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| volume 3, pages 127{163, Kluwer, 2000. |XML| xmlLoc_7 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
page ||| 249 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
reference ||| [9] T. M. Mitchell. Machine Learning. McGraw-Hill, 1997. |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_smaller xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| [10] G. Penn, J. Hu, H. Luo, and R. McDonald. Flexible |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| web document analysis for delivery to narrow- |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| bandwidth devices. In Proc. 6th International |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| Conference on Document Analysis and Recognition |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| (ICDAR01), pages 1074{1078, Seattle, WA, USA, |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| September 2001. |XML| xmlLoc_0 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [11] M. F. Porter. An algorithm for suffix stripping. |XML| xmlLoc_0 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| Program, 14(3):130-137, 1980. |XML| xmlLoc_1 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [12] V. N. Vapnik. The Nature of Statistical Learning |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| Theory, volume 1. Springer, New York, 1995. |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [13] Y. Yang and X. Liu. A re-examination of text |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| categorization methods. In Proc. SIGIR&apos;99, pages |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| 42{49, Berkeley, California, USA, August 1999. |XML| xmlLoc_1 xmlAlign_none xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| [14] M. Yoshida, K. Torisawa, and J. Tsujii. A method to |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_new
reference ||| integrate tables of the world wide web. In Proc. 1st |XML| xmlLoc_1 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| International Workshop on Web Document Analysis, |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
reference ||| pages 31{34, Seattle, WA, USA, September 2001. |XML| xmlLoc_2 xmlAlign_justified xmlFontFace_common xmlFontFaceChange_no xmlFontSize_common xmlFontSizeChange_no xmlBold_no xmlItalic_no xmlDd_no xmlCell_no xmlBullet_yes xmlIndent_no xmlPara_same
page ||| 250 |XML| xmlLoc_7 xmlAlign_left xmlFontFace_common xmlFontFaceChange_no xmlFontSize_larger xmlFontSizeChange_bigger xmlBold_no xmlItalic_no xmlDd_yes xmlCell_no xmlBullet_no xmlIndent_no xmlPara_new
