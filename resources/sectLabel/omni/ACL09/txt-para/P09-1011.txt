# Para 0 1
Learning Semantic Correspondences with Less Supervision
# Para 1 3
Percy Liang
UC Berkeley
pliang@cs.berkeley.edu
# Para 4 3
Michael I. Jordan
UC Berkeley
jordan@cs.berkeley.edu
# Para 7 3
Dan Klein
UC Berkeley
klein@cs.berkeley.edu
# Para 10 1
Abstract
# Para 11 12
A central problem in grounded language acqui-
sition is learning the correspondences between a 
rich world state and a stream of text which refer-
ences that world state. To deal with the high de-
gree of ambiguity present in this setting, we present 
a generative model that simultaneously segments 
the text into utterances and maps each utterance 
to a meaning representation grounded in the world 
state. We show that our model generalizes across 
three domains of increasing difficulty—Robocup 
sportscasting, weather forecasts (a new domain), 
and NFL recaps.
# Para 23 1
1 Introduction
# Para 24 10
Recent work in learning semantics has focused 
on mapping sentences to meaning representa-
tions (e.g., some logical form) given aligned sen-
tence/meaning pairs as training data (Ge and 
Mooney, 2005; Zettlemoyer and Collins, 2005; 
Zettlemoyer and Collins, 2007; Lu et al., 2008). 
However, this degree of supervision is unrealistic 
for modeling human language acquisition and can 
be costly to obtain for building large-scale, broad- 
coverage language understanding systems.
# Para 34 12
A more flexible direction is grounded language 
acquisition: learning the meaning of sentences 
in the context of an observed world state. The 
grounded approach has gained interest in various 
disciplines (Siskind, 1996; Yu and Ballard, 2004; 
Feldman and Narayanan, 2004; Gorniak and Roy, 
2007). Some recent work in the NLP commu-
nity has also moved in this direction by relaxing 
the amount of supervision to the setting where 
each sentence is paired with a small set of can-
didate meanings (Kate and Mooney, 2007; Chen 
and Mooney, 2008).
# Para 46 6
The goal of this paper is to reduce the amount 
of supervision even further. We assume that we are 
given a world state represented by a set of records 
along with a text, an unsegmented sequence of 
words. For example, in the weather forecast do-
main (Section 2.2), the text is the weather report, 
# Para 52 2
and the records provide a structured representation 
of the temperature, sky conditions, etc.
# Para 54 18
In this less restricted data setting, we must re-
solve multiple ambiguities: (1) the segmentation 
of the text into utterances; (2) the identification of 
relevant facts, i.e., the choice of records and as-
pects of those records; and (3) the alignment of ut-
terances to facts (facts are the meaning represen-
tations of the utterances). Furthermore, in some 
of our examples, much of the world state is not 
referenced at all in the text, and, conversely, the 
text references things which are not represented in 
our world state. This increased amount of ambigu-
ity and noise presents serious challenges for learn-
ing. To cope with these challenges, we propose a 
probabilistic generative model that treats text seg-
mentation, fact identification, and alignment in a 
single unified framework. The parameters of this 
hierarchical hidden semi-Markov model can be es-
timated efficiently using EM.
# Para 72 21
We tested our model on the task of aligning 
text to records in three different domains. The 
first domain is Robocup sportscasting (Chen and 
Mooney, 2008). Their best approach (KRISPER) 
obtains 67% F1; our method achieves 76.5%. This 
domain is simplified in that the segmentation is 
known. The second domain is weather forecasts, 
for which we created a new dataset. Here, the 
full complexity of joint segmentation and align-
ment arises. Nonetheless, we were able to obtain 
reasonable results on this task. The third domain 
we considered is NFL recaps (Barzilay and Lap-
ata, 2005; Snyder and Barzilay, 2007). The lan-
guage used in this domain is richer by orders of 
magnitude, and much of it does not reference the 
world state. Nonetheless, taking the first unsuper-
vised approach to this problem, we were able to 
make substantial progress: We achieve an F1 of 
53.2%, which closes over half of the gap between 
a heuristic baseline (26%) and supervised systems 
(68%–80%).
# Para 93 1
91
# Para 94 1
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 91–99,
# Para 95 1
Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP
# Para 96 4
Dataset	# scenarios	IwI	ITI	IsI	IAI
Robocup	1919	5.7	9	2.4	0.8
Weather	22146	28.7	12	36.0	5.8
NFL	78	969.0	44	329.0	24.3
# Para 100 4
Table 1: Statistics for the three datasets. We report average 
values across all scenarios in the dataset: I w I is the number of 
words in the text, ITI is the number of record types, IsI is the 
number of records, and IAI is the number of gold alignments.
# Para 104 1
2 Domains and Datasets
# Para 105 3
Our goal is to learn the correspondence between a 
text w and the world state s it describes. We use 
the term scenario to refer to such a (w, s) pair.
# Para 108 8
The text is simply a sequence of words w = 
(wi, ... , w1w1). We represent the world state s as 
a set of records, where each record r E s is de-
scribed by a record type r.t E T and a tuple of 
field values r.v = (r.vi, ... , r.vm).1 For exam-
ple, temperature is a record type in the weather 
domain, and it has four fields: time, min, mean, 
and max.
# Para 116 17
The record type r.t E T specifies the field type 
r.tf E {INT, STR, CAT} of each field value r.v f, 
f = 1, ... , m. There are three possible field 
types—integer (INT), string (STR), and categori-
cal (CAT)—which are assumed to be known and 
fixed. Integer fields represent numeric properties 
of the world such as temperature, string fields rep-
resent surface-level identifiers such as names of 
people, and categorical fields represent discrete 
concepts such as score types in football (touch-
down, field goal, and safety). The field type de-
termines the way we expect the field value to be 
rendered in words: integer fields can be numeri-
cally perturbed, string fields can be spliced, and 
categorical fields are represented by open-ended 
word distributions, which are to be learned. See 
Section 3.3 for details.
# Para 133 1
2.1 Robocup Sportscasting
# Para 134 9
In this domain, a Robocup simulator generates the 
state of a soccer game, which is represented by 
a set of event records. For example, the record 
pass(arg1=pink1,arg2=pink5) denotes a pass-
ing event; this type of record has two fields: arg1 
(the actor) and arg2 (the recipient). As the game is 
progressing, humans interject commentaries about 
notable events in the game, e.g., pink] passes back 
to pink5 near the middle of the field. All of the
# Para 143 1
1To simplify notation, we assume that each record has m
# Para 144 1
fields, though in practice, m depends on the record type r.t.
# Para 145 7
fields in this domain are categorical, which means 
there is no a priori association between the field 
value pink1 and the word pink]. This degree of 
flexibility is desirable because pink] is sometimes 
referred to as pink goalie, a mapping which does 
not arise from string operations but must instead 
be learned.
# Para 152 11
We used the dataset created by Chen and 
Mooney (2008), which contains 1919 scenarios 
from the 2001–2004 Robocup finals. Each sce-
nario consists of a single sentence representing a 
fragment of a commentary on the game, paired 
with a set of candidate records. In the annotation, 
each sentence corresponds to at most one record 
(possibly one not in the candidate set, in which 
case we automatically get that sentence wrong). 
See Figure 1(a) for an example and Table 1 for 
summary statistics on the dataset.
# Para 163 1
2.2 Weather Forecasts
# Para 164 13
In this domain, the world state contains de-
tailed information about a local weather forecast 
and the text is a short forecast report (see Fig-
ure 1(b) for an example). To create the dataset, 
we collected local weather forecasts for 3,753 
cities in the US (those with population at least 
10,000) over three days (February 7–9, 2009) from 
www. weather. gov. For each city and date, we 
created two scenarios, one for the day forecast and 
one for the night forecast. The forecasts consist of 
hour-by-hour measurements of temperature, wind 
speed, sky cover, chance of rain, etc., which rep-
resent the underlying world state.
# Para 177 9
This world state is summarized by records 
which aggregate measurements over selected time 
intervals. For example, one of the records states 
the minimum, average, and maximum tempera-
ture from 5pm to 6am. This aggregation pro-
cess produced 22,146 scenarios, each containing 
IsI = 36 multi-field records. There are 12 record 
types, each consisting of only integer and categor-
ical fields.
# Para 186 5
To annotate the data, we split the text by punc-
tuation into lines and labeled each line with the 
records to which the line refers. These lines are 
used only for evaluation and are not part of the 
model (see Section 5.1 for further discussion).
# Para 191 4
The weather domain is more complex than the 
Robocup domain in several ways: The text w is 
longer, there are more candidate records, and most 
notably, w references multiple records (5.8 on av-
# Para 195 1
92
# Para 196 6
s		w:
badPass (arg1=pink1 1,arg2=purple3)		pink11 makes a bad pass and was picked off by purple3
ballstopped()		
ballstopped()		
kick(arg1=pink1 1)		
turnover(arg1=pink11,arg2=purple3)		
# Para 202 1
(a) Robocup sportscasting
# Para 203 11
. . .
rainChance (time=26-30,mo de=De f )
temperature (time=17-30,min=43,mean=44,max=47)
windDir (time=17-30,mode=SE)
windSpeed (time=17-30,min=1 1,mean=12,max=14,mode=10-20)
precipPotential (time=17-30,min=5,mean=26,max=75)
rainChance (time=17-30,mode=--)
windChill(time=17-30,min=37,mean=38,max=42)
skyCover(time=17-30,mode=50-75)
rainChance (time=21-30,mode=--)
. . .
# Para 214 1
s
# Para 215 1
w:
# Para 216 1
Occasional rain after 3am .
# Para 217 1
Low around 43 .
# Para 218 3
South wind between 11 and 14 mph . 
Chance of precipitation is 80 % . 
New rainfall amounts between a
# Para 221 1
quarter and half of an inch possible .
# Para 222 1
(b) Weather forecasts
# Para 223 1
. . .	s
# Para 224 5
rushing(entity=richie anderson,att=5,yds=37,avg=7.4,lg=16,td=0)
receiving(entity=richie anderson,rec=4,yds=46,avg=11.5,lg=20,td=0)
play(quarter=1,description=richie anderson ( dal ) rushed left side for 13 yards .)
defense (entity= eric ogbogu,tot=4,solo=3,ast=1,sck=0,yds=0)
. . .
# Para 229 1
w:
# Para 230 1
. . .
# Para 231 3
Former Jets player Richie Anderson 
finished with 37 yards on 5 carries 
plus 4 receptions for 46 yards .
# Para 234 1
. . .
# Para 235 1
(c) NFL recaps
# Para 236 3
Figure 1: An example of a scenario for each of the three domains. Each scenario consists of a candidate set of records s and a 
text w. Each record is specified by a record type (e.g., badPass) and a set of field values. Integer values are in Roman, string 
values are in italics, and categorical values are in typewriter. The gold alignments are shown.
# Para 239 2
erage), so the segmentation of w is unknown. See 
Table 1 for a comparison of the two datasets.
# Para 241 1
2.3 NFL Recaps
# Para 242 14
In this domain, each scenario represents a single 
NFL football game (see Figure 1(c) for an exam-
ple). The world state (the things that happened 
during the game) is represented by database tables, 
e.g., scoring summary, team comparison, drive 
chart, play-by-play, etc. Each record is a database 
entry, for instance, the receiving statistics for a cer-
tain player. The text is the recap of the game— 
an article summarizing the game highlights. The 
dataset we used was collected by Barzilay and La-
pata (2005). The data includes 466 games during 
the 2003–2004 NFL season. 78 of these games 
were annotated by Snyder and Barzilay (2007), 
who aligned each sentence to a set of records.
# Para 256 8
This domain is by far the most complicated of 
the three. Many records corresponding to inconse-
quential game statistics are not mentioned. Con-
versely, the text contains many general remarks 
(e.g., it was just that type of game) which are 
not present in any of the records. Furthermore, 
the complexity of the language used in the re-
cap is far greater than what we can represent us- 
# Para 264 8
ing our simple model. Fortunately, most of the 
fields are integer fields or string fields (generally 
names or brief descriptions), which provide im-
portant anchor points for learning the correspon-
dences. Nonetheless, the same names and num-
bers occur in multiple records, so there is still un-
certainty about which record is referenced by a 
given sentence.
# Para 272 1
3 Generative Model
# Para 273 4
To learn the correspondence between a text w and 
a world state s, we propose a generative model 
p(w I s) with latent variables specifying this cor-
respondence.
# Para 277 11
Our model combines segmentation with align-
ment. The segmentation aspect of our model is 
similar to that of Grenager et al. (2005) and Eisen- 
stein and Barzilay (2008), but in those two models, 
the segments are clustered into topics rather than 
grounded to a world state. The alignment aspect 
of our model is similar to the HMM model for 
word alignment (Ney and Vogel, 1996). DeNero 
et al. (2008) perform joint segmentation and word 
alignment for machine translation, but the nature 
of that task is different from ours.
# Para 288 1
The model is defined by a generative process,
# Para 289 1
93
# Para 290 2
which proceeds in three stages (Figure 2 shows the 
corresponding graphical model):
# Para 292 3
1. Record choice: choose a sequence of records 
r = (r1, ... , rlrl) to describe, where each 
ri E s.
# Para 295 3
2. Field choice: for each chosen record ri, se-
lect a sequence of fields fi = (fi1, . . . , filfil), 
where each fib E 11, ... , m}.
# Para 298 3
3. Word choice: for each chosen field fib, 
choose a number cib &gt; 0 and generate a se-
quence of cib words.
# Para 301 7
The observed text w is the terminal yield formed 
by concatenating the sequences of words of all 
fields generated; note that the segmentation of w 
provided by c = 1cib } is latent. Think of the 
words spanned by a record as constituting an ut-
terance with a meaning representation given by the 
record and subset of fields chosen.
# Para 308 3
Formally, our probabilistic model places a dis-
tribution over (r, f, c, w) and factorizes according 
to the three stages as follows:
# Para 311 1
p(r, f, c, w I s) = p(r I s)p(f I r)p(c, w I r, f, s)
# Para 312 2
The following three sections describe each of 
these stages in more detail.
# Para 314 1
3.1 Record Choice Model
# Para 315 15
The record choice model specifies a distribu-
tion over an ordered sequence of records r = 
(r1, ... , rlrl), where each record ri E s. This 
model is intended to capture two types of regu-
larities in the discourse structure of language. The 
first is salience, that is, some record types are sim-
ply more prominent than others. For example, in 
the NFL domain, 70% of scoring records are men-
tioned whereas only 1% of punting records are 
mentioned. The second is the idea of local co-
herence, that is, the order in which one mentions 
records tend to follow certain patterns. For ex-
ample, in the weather domain, the sky conditions 
are generally mentioned first, followed by temper-
ature, and then wind speed.
# Para 330 4
To capture these two phenomena, we define a 
Markov model on the record types (and given the 
record type, a record is chosen uniformly from the 
set of records with that type):
# Para 334 2
p(r I s) =	Ylrl i=1	p(ri.t I ri�1.t)	1
		Is( ri.t)I,	(1)
# Para 336 8
where s(t) def = 1r E s : r.t = t} and r0.t is 
a dedicated START record type.2 We also model 
the transition of the final record type to a desig-
nated STOP record type in order to capture regu-
larities about the types of records which are de-
scribed last. More sophisticated models of coher-
ence could also be employed here (Barzilay and 
Lapata, 2008).
# Para 344 4
We assume that s includes a special null record 
whose type is NULL, responsible for generating 
parts of our text which do not refer to any real 
records.
# Para 348 1
3.2 Field Choice Model
# Para 349 9
Each record type t E T has a separate field choice 
model, which specifies a distribution over a se-
quence of fields. We want to capture salience 
and coherence at the field level like we did at the 
record level. For instance, in the weather domain, 
the minimum and maximum fields of a tempera-
ture record are mentioned whereas the average is 
not. In the Robocup domain, the actor typically 
precedes the recipient in passing event records.
# Para 358 2
Formally, we have a Markov model over the 
fields:3
# Para 360 1
p(fib I fi(b�1)). (2)
# Para 361 9
Each record type has a dedicated null field with 
its own multinomial distribution over words, in-
tended to model words which refer to that record 
type in general (e.g., the word passes for passing 
records). We also model transitions into the first 
field and transitions out of the final field with spe-
cial START and STOP fields. This Markov structure 
allows us to capture a few elements of rudimentary 
syntax.
# Para 370 1
3.3 Word Choice Model
# Para 371 7
We arrive at the final component of our model, 
which governs how the information about a par-
ticular field of a record is rendered into words. For 
each field fib, we generate the number of words cib 
from a uniform distribution over 11, 2,... , Cmax }, 
where Cmax is set larger than the length of the 
longest text we expect to see. Conditioned on
# Para 378 1
2 We constrain our inference to only consider record types
# Para 379 1
t that occur in s, i.e., s�t� 0 0.
# Para 380 2
3During inference, we prohibit consecutive fields from re-
peating.
# Para 382 2
Ylrl 
i=1
# Para 384 1
p(f I r) =
# Para 385 1
lf;
# Para 386 1
Y
# Para 387 1
b=1
# Para 388 1
94
# Para 389 1
c, w
# Para 390 1
s
# Para 391 1
r
# Para 392 1
f
# Para 393 3
Record choice 
Field choice 
Word choice
# Para 396 1
w1	...	w
# Para 397 1
f11
# Para 398 1
c11
# Para 399 1
T
# Para 400 1
1
# Para 401 1
. . .
# Para 402 1
w	...	w
# Para 403 1
fi1
# Para 404 1
ci1
# Para 405 1
...	filf;l
# Para 406 1
Ti
# Para 407 1
s
# Para 408 1
w	...	w
# Para 409 1
cilf;l
# Para 410 1
...	f,,lfn
# Para 411 1
w	...	wlwl
# Para 412 1
c,,lfn
# Para 413 1
T,,
# Para 414 3
Figure 2: Graphical model representing the generative model. First, records are chosen and ordered from the set s. Then fields 
are chosen for each record. Finally, words are chosen for each field. The world state s and the words w are observed, while 
(r, f, c) are latent variables to be inferred (note that the number of latent variables itself is unknown).
# Para 417 2
the fields f, the words w are generated indepen-
dently:4
# Para 419 1
1w1
# Para 420 1
p(w I r, f, c, s) = Y pw(wk I r(k).t f(k), r(k).v f(k)),
# Para 421 1
k=1
# Para 422 8
where r(k) and f (k) are the record and field re-
sponsible for generating word wk, as determined 
by the segmentation c. The word choice model 
pw (w I t, v) specifies a distribution over words 
given the field type t and field value v. This distri-
bution is a mixture of a global backoff distribution 
over words and a field-specific distribution which 
depends on the field type t.
# Para 430 6
Although we designed our word choice model 
to be relatively general, it is undoubtedly influ-
enced by the three domains. However, we can 
readily extend or replace it with an alternative if 
desired; this modularity is one principal benefit of 
probabilistic modeling.
# Para 436 10
Integer Fields (t = INT) For integer fields, we 
want to capture the intuition that a numeric quan-
tity v is rendered in the text as a word which 
is possibly some other numerical value w due to 
stylistic factors. Sometimes the exact value v is 
used (e.g., in reporting football statistics). Other 
times, it might be customary to round v (e.g., wind 
speeds are typically rounded to a multiple of 5). 
In other cases, there might just be some unex-
plained error, where w deviates from v by some
# Para 446 2
noise c+ = w — v &gt; 0 or c— = v — w &gt; 0. We 
model c+ and c— as geometric distributions.5 In
# Para 448 5
4While a more sophisticated model of words would be 
useful if we intended to use this model for natural language 
generation, the false independence assumptions present here 
matter less for the task of learning the semantic correspon-
dences because we always condition on w.
# Para 453 3
5Specifically, p(e+; a+) = (1 — a+)�+_1a+, where 
a+ is a field-specific parameter; p(e_; a_) is defined analo-
gously.
# Para 456 1
(a) temperature.min	(b) windSpeed.min
# Para 457 2
Figure 3: Two integer field types in the weather domain for 
which we learn different distributions over the ways in which
# Para 459 1
a value v might appear in the text as a word w. Suppose the
# Para 460 1
record field value is v = 13. Both distributions are centered
# Para 461 6
around v, as is to be expected, but the two distributions have 
different shapes: For temperature.min, almost all the mass 
is to the left, suggesting that forecasters tend to report con-
servative lower bounds. For the wind speed, the mass is con-
centrated on 13 and 15, suggesting that forecasters frequently 
round wind speeds to multiples of 5.
# Para 467 2
summary, we allow six possible ways of generat-
ing the word w given v:
# Para 469 1
v rv15 Lv�5 round5(v) v — c— v + c+
# Para 470 3
Separate probabilities for choosing among these 
possibilities are learned for each field type (see 
Figure 3 for an example).
# Para 473 8
String Fields (t = STR) Strings fields are in-
tended to represent values which we expect to be 
realized in the text via a simple surface-level trans-
formation. For example, a name field with value 
v = Moe Williams is sometimes referenced in the 
text by just Williams. We used a simple generic 
model of rendering string fields: Let w be a word 
chosen uniformly from those in v.
# Para 481 5
Categorical Fields (t = CAT) Unlike string 
fields, categorical fields are not tied down to any 
lexical representation; in fact, the identities of the 
categorical field values are irrelevant. For each 
categorical field f and possible value v, we have a
# Para 486 2
8 9 10 1112 13 14 15 16 1718
W
# Para 488 1
8 9 10 1112 13 14 15 16 1718
# Para 489 1
0.5
# Para 490 1
0.4
# Para 491 1
0.3
# Para 492 1
0.2
# Para 493 1
0.1
# Para 494 5
0.6 
0.4 
0.3 
0.2 
0.1
# Para 499 1
95
# Para 500 6
v		pw(w I t, v)	herence structure at both the record and field lev-els. To quantify the benefits of incorporating these two aspects, we compare our full model with two simpler variants.
0-25 25-50 50-75 75-100			
		, clear mostly sunny	
		partly , cloudy increasing	
		mostly cloudy, partly	
		of inch an possible new a rainfall	
# Para 506 5
Table 2: Highest probability words for the categorical field 
skyCover.mode in the weather domain. It is interesting to 
note that skyCover=7 5-100 is so highly correlated with rain 
that the model learns to connect an overcast sky in the world 
to the indication of rain in the text.
# Para 511 6
separate multinomial distribution over words from 
which w is drawn. An example of a categori-
cal field is skyCover.mode in the weather domain, 
which has four values: 0 - 2 5, 2 5 - 5 0, 5 0 - 7 5, 
and 7 5 -10 0. Table 2 shows the top words for 
each of these field values learned by our model.
# Para 517 1
4 Learning and Inference
# Para 518 7
Our learning and inference methodology is a fairly 
conventional application of Expectation Maxi-
mization (EM) and dynamic programming. The 
input is a set of scenarios D, each of which is a 
text w paired with a world state s. We maximize 
the marginal likelihood of our data, summing out 
the latent variables (r, f, c):
# Para 525 1
p(r, f, c, w I s; 0), (3)
# Para 526 11
where 0 are the parameters of the model (all the 
multinomial probabilities). We use the EM algo-
rithm to maximize (3), which alternates between 
the E-step and the M-step. In the E-step, we 
compute expected counts according to the poste-
rior p(r, f, c I w, s; 0). In the M- step, we op-
timize the parameters 0 by normalizing the ex-
pected counts computed in the E-step. In our ex-
periments, we initialized EM with a uniform dis-
tribution for each multinomial and applied add-0.1 
smoothing to each multinomial in the M- step.
# Para 537 7
As with most complex discrete models, the bulk 
of the work is in computing expected counts under 
p(r, f, c I w, s; 0). Formally, our model is a hier-
archical hidden semi-Markov model conditioned 
on s. Inference in the E-step can be done using a 
dynamic program similar to the inside-outside al-
gorithm.
# Para 544 1
5 Experiments
# Para 545 2
Two important aspects of our model are the seg-
mentation of the text and the modeling of the co-
# Para 547 6
•	Model 1 (no model of segmentation or co-
herence): Each record is chosen indepen-
dently; each record generates one field, and 
each field generates one word. This model is 
similar in spirit to IBM model 1 (Brown et 
al., 1993).
# Para 553 4
•	Model 2 (models segmentation but not coher-
ence): Records and fields are still generated 
independently, but each field can now gener-
ate multiple words.
# Para 557 4
•	Model 3 (our full model of segmentation and 
coherence): Records and fields are generated 
according to the Markov chains described in 
Section 3.
# Para 561 1
5.1 Evaluation
# Para 562 7
In the annotated data, each text w has been di-
vided into a set of lines. These lines correspond 
to clauses in the weather domain and sentences in 
the Robocup and NFL domains. Each line is an-
notated with a (possibly empty) set of records. Let 
A be the gold set of these line-record alignment 
pairs.
# Para 569 10
To evaluate a learned model, we com-
pute the Viterbi segmentation and alignment 
(argmaxr,f,c p(r, f, c I w, s)). We produce a pre-
dicted set of line-record pairs A&apos; by aligning a line 
to a record ri if the span of (the utterance corre-
sponding to) ri overlaps the line. The reason we 
evaluate indirectly using lines rather than using ut-
terances is that it is difficult to annotate the seg-
mentation of text into utterances in a simple and 
consistent manner.
# Para 579 7
We compute standard precision, recall, and F1 
of A&apos; with respect to A. Unless otherwise spec-
ified, performance is reported on all scenarios, 
which were also used for training. However, we 
did not tune any hyperparameters, but rather used 
generic values which worked well enough across 
all three domains.
# Para 586 1
5.2 Robocup Sportscasting
# Para 587 3
We ran 10 iterations of EM on Models 1–3. Ta-
ble 3 shows that performance improves with in-
creased model sophistication. We also compare
# Para 590 1
Y
# Para 591 1
max
# Para 592 1
B
# Para 593 1
(w,․)ED
# Para 594 1
X
# Para 595 1
r,f,c
# Para 596 1
96
# Para 597 4
Method	Precision	Recall	F1
Model1	78.6	61.9	69.3
Model2	74.1	84.1	78.8
Model 3	77.3	84.0	80.5
# Para 601 2
Table 3: Alignment results on the Robocup sportscasting 
dataset.
# Para 603 4
Method	F1
Random baseline	48.0
Chen and Mooney (2008)	67.0
Model 3	75.7
# Para 607 2
Table 4: Fl scores based on the 4-fold cross-validation 
scheme in Chen and Mooney (2008).
# Para 609 2
our model to the results of Chen and Mooney 
(2008) in Table 4.
# Para 611 11
Figure 4 provides a closer look at the predic-
tions made by each of our three models for a par-
ticular example. Model 1 easily mistakes pink10 
for the recipient of a pass record because decisions 
are made independently for each word. Model 2 
chooses the correct record, but having no model 
of the field structure inside a record, it proposes 
an incorrect field segmentation (although our eval-
uation is insensitive to this). Equipped with the 
ability to prefer a coherent field sequence, Model 
3 fixes these errors.
# Para 622 10
Many of the remaining errors are due to the 
garbage collection phenomenon familiar from 
word alignment models (Moore, 2004; Liang et 
al., 2006). For example, the ballstopped record 
occurs frequently but is never mentioned in the 
text. At the same time, there is a correlation be-
tween ballstopped and utterances such as pink2 
holds onto the ball, which are not aligned to any 
record in the annotation. As a result, our model 
incorrectly chooses to align the two.
# Para 632 1
5.3 Weather Forecasts
# Para 633 10
For the weather domain, staged training was nec-
essary to get good results. For Model 1, we ran 
15 iterations of EM. For Model 2, we ran 5 it-
erations of EM on Model 1, followed by 10 it-
erations on Model 2. For Model 3, we ran 5 it-
erations of Model 1, 5 iterations of a simplified 
variant of Model 3 where records were chosen in-
dependently, and finally, 5 iterations of Model 3. 
When going from one model to another, we used 
the final posterior distributions of the former to ini-
# Para 643 4
Method	Precision	Recall	F1
Model 1	49.9	75.1	60.0
Model 2	67.3	70.4	68.8
Model 3	76.3	73.8	75.0
# Para 647 1
Table 5: Alignment results on the weather forecast dataset.
# Para 648 2
Figure 4: An example of predictions made by each of the 
three models on the Robocup dataset.
# Para 650 3
tialize the parameters of the latter.6 We also pro-
hibited utterances in Models 2 and 3 from crossing 
punctuation during inference.
# Para 653 18
Table 5 shows that performance improves sub-
stantially in the more sophisticated models, the 
gains being greater than in the Robocup domain. 
Figure 5 shows the predictions of the three models 
on an example. Model 1 is only able to form iso-
lated (but not completely inaccurate) associations. 
By modeling segmentation, Model 2 accounts for 
the intermediate words, but errors are still made 
due to the lack of Markov structure. Model 3 
remedies this. However, unexpected structures 
are sometimes learned. For example, the temper-
ature.time=6-21 field indicates daytime, which 
happens to be perfectly correlated with the word 
high, although high intuitively should be associ-
ated with the temperature.max field. In these cases 
of high correlation (Table 2 provides another ex-
ample), it is very difficult to recover the proper 
alignment without additional supervision.
# Para 671 1
5.4 NFL Recaps
# Para 672 7
In order to scale up our models to the NFL do-
main, we first pruned for each sentence the records 
which have either no numerical values (e.g., 23, 
23-10, 2/4) nor name-like words (e.g., those that 
appear only capitalized in the text) in common. 
This eliminated all but 1.5% of the record can-
didates per sentence, while maintaining an ora-
# Para 679 4
6It is interesting to note that this type of staged training 
is evocative of language acquisition in children: lexical asso-
ciations are formed (Model 1) before higher-level discourse 
structure is learned (Model 3).
# Para 683 3
r: 
f: 
w:
# Para 686 1
[Model 1]
# Para 687 3
r: 
f: 
w:
# Para 690 1
[Model 2]
# Para 691 1
pass
# Para 692 1
arg2=pink10
# Para 693 1
pink10	turns the ball over to purple5
# Para 694 1
turnover
# Para 695 1
pink10 turns the ball over
# Para 696 2
arg2=purple5
to purple5
# Para 698 1
turnover
# Para 699 3
r: 
f: 
w:
# Para 702 1
[Model 3]
# Para 703 1
turns the ball over to
# Para 704 2
arg1=pink10
pink10
# Para 706 2
arg2=purple5
purple5
# Para 708 1
97
# Para 709 1
Figure 5: An example of predictions made by each of the three models on the weather dataset.
# Para 710 1
[Model 1]
# Para 711 1
[Model 2]
# Para 712 1
[Model 3]
# Para 713 1
f:
# Para 714 1
w: cloudy, with a
# Para 715 3
r: 
f: 
w:
# Para 718 3
r: 
f: 
w:
# Para 721 1
r:
# Para 722 3
rainChance 
mode=– 
cloudy ,
# Para 725 1
skyCover
# Para 726 1
cloudy, 
# Para 727 1
with a
# Para 728 1
with a
# Para 729 2
time=6-21 
high near
# Para 731 1
windDir
# Para 732 2
time=6-21 
high near
# Para 734 2
time=6-21 
high near
# Para 736 1
temperature
# Para 737 1
temperature
# Para 738 1
temperature
# Para 739 2
max=63
63
# Para 741 2
max=63
63
# Para 743 1
max=63
# Para 744 1
63.	east southeast wind between 5 and
# Para 745 1
mean=56
# Para 746 1
.
# Para 747 2
mode=SE
east southeast
# Para 749 1
.
# Para 750 1
windDir
# Para 751 1
mode=SE
# Para 752 1
mode=SE
# Para 753 1
east southeast wind between
# Para 754 1
windDir
# Para 755 1
wind between
# Para 756 1
windDir
# Para 757 1
windSpeed
# Para 758 2
min=5
5
# Para 760 3
windSpeed 
mean=9 
11 mph.
# Para 763 2
min=5
5
# Para 765 1
and
# Para 766 1
windSpeed
# Para 767 2
max=13 
and 11
# Para 769 1
windSpeed
# Para 770 2
mean=9
11
# Para 772 1
mph.
# Para 773 1
mph.
# Para 774 4
cle alignment F1 score of 88.7. Guessing a single 
random record for each sentence yields an F1 of 
12.0. A reasonable heuristic which uses weighted 
number- and string-matching achieves 26.7.
# Para 778 17
Due to the much greater complexity of this do-
main, Model 2 was easily misled as it tried with-
out success to find a coherent segmentation of the 
fields. We therefore created a variant, Model 2’, 
where we constrained each field to generate ex-
actly one word. To train Model 2’, we ran 5 it-
erations of EM where each sentence is assumed 
to have exactly one record, followed by 5 itera-
tions where the constraint was relaxed to also al-
low record boundaries at punctuation and the word 
and. We did not experiment with Model 3 since 
the discourse structure on records in this domain is 
not at all governed by a simple Markov model on 
record types—indeed, most regions do not refer to 
any records at all. We also fixed the backoff prob-
ability to 0.1 instead of learning it and enforced 
zero numerical deviation on integer field values.
# Para 795 16
Model 2’ achieved an F1 of 39.9, an improve-
ment over Model 1, which attained 32.8. Inspec-
tion of the errors revealed the following problem: 
The alignment task requires us to sometimes align 
a sentence to multiple redundant records (e.g., 
play and score) referenced by the same part of the 
text. However, our model generates each part of 
text from only one record, and thus it can only al-
low an alignment to one record .7 To cope with this 
incompatibility between the data and our notion of 
semantics, we used the following solution: We di-
vided the records into three groups by type: play, 
score, and other. Each group has a copy of the 
model, but we enforce that they share the same 
segmentation. We also introduce a potential that 
couples the presence or absence of records across
# Para 811 3
7The model can align a sentence to multiple records pro-
vided that the records are referenced by non-overlapping 
parts of the text.
# Para 814 8
Method	Precision	Recall	F1
Random (with pruning)	13.1	11.0	12.0
Baseline	29.2	24.6	26.7
Model 1	25.2	46.9	32.8
Model 2’	43.4	37.0	39.9
Model 2’ (with groups)	46.5	62.1	53.2
Graph matching (sup.)	73.4	64.5	68.6
Multilabel global (sup.)	87.3	74.5	80.3
# Para 822 3
Table 6: Alignment results on the NFL dataset. Graph match-
ing and multilabel are supervised results reported in Snyder 
and Barzilay (2007).9
# Para 825 2
groups on the same segment to capture regular co- 
occurrences between redundant records.
# Para 827 15
Table 6 shows our results. With groups, we 
achieve an F1 of 53.2. Though we still trail su-
pervised techniques, which attain numbers in the 
68–80 range, we have made substantial progress 
over our baseline using an unsupervised method. 
Furthermore, our model provides a more detailed 
analysis of the correspondence between the world 
state and text, rather than just producing a single 
alignment decision. Most of the remaining errors 
made by our model are due to a lack of calibra-
tion. Sometimes, our false positives are close calls 
where a sentence indirectly references a record, 
and our model predicts the alignment whereas the 
annotation standard does not. We believe that fur-
ther progress is possible with a richer model.
# Para 842 1
6 Conclusion
# Para 843 9
We have presented a generative model of corre-
spondences between a world state and an unseg-
mented stream of text. By having a joint model 
of salience, coherence, and segmentation, as well 
as a detailed rendering of the values in the world 
state into words in the text, we are able to cope 
with the increased ambiguity that arises in this new 
data setting, successfully pushing the limits of un-
supervision.
# Para 852 1
98
# Para 853 1
References
# Para 854 5
R. Barzilay and M. Lapata. 2005. Collective content selec-
tion for concept-to-text generation. In Human Language 
Technology and Empirical Methods in Natural Language 
Processing (HLT/EMNLP), pages 331–338, Vancouver, 
B.C.
# Para 859 3
R. Barzilay and M. Lapata. 2008. Modeling local coher-
ence: An entity-based approach. Computational Linguis-
tics, 34:1–34.
# Para 862 4
P. F. Brown, S. A. D. Pietra, V. J. D. Pietra, and R. L. Mer-
cer. 1993. The mathematics of statistical machine trans-
lation: Parameter estimation. Computational Linguistics, 
19:263–311.
# Para 866 4
D. L. Chen and R. J. Mooney. 2008. Learning to sportscast: 
A test of grounded language acquisition. In International 
Conference on Machine Learning (ICML), pages 128– 
135. Omnipress.
# Para 870 4
J. DeNero, A. Bouchard-Cˆot´e, and D. Klein. 2008. Sampling 
alignment structure under a Bayesian translation model. 
In Empirical Methods in Natural Language Processing 
(EMNLP), pages 314–323, Honolulu, HI.
# Para 874 3
J. Eisenstein and R. Barzilay. 2008. Bayesian unsupervised 
topic segmentation. In Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 334–343.
# Para 877 3
J. Feldman and S. Narayanan. 2004. Embodied meaning in a 
neural theory of language. Brain and Language, 89:385– 
392.
# Para 880 4
R. Ge and R. J. Mooney. 2005. A statistical semantic parser 
that integrates syntax and semantics. In Computational 
Natural Language Learning (CoNLL), pages 9–16, Ann 
Arbor, Michigan.
# Para 884 3
P. Gorniak and D. Roy. 2007. Situated language understand-
ing as filtering perceived affordances. Cognitive Science, 
31:197–231.
# Para 887 5
T. Grenager, D. Klein, and C. D. Manning. 2005. Unsu-
pervised learning of field segmentation models for infor-
mation extraction. In Association for Computational Lin-
guistics (ACL), pages 371–378, Ann Arbor, Michigan. As-
sociation for Computational Linguistics.
# Para 892 4
R. J. Kate and R. J. Mooney. 2007. Learning language se-
mantics from ambiguous supervision. In Association for 
the Advancement of Artificial Intelligence (AAAI), pages 
895–900, Cambridge, MA. MIT Press.
# Para 896 4
P. Liang, B. Taskar, and D. Klein. 2006. Alignment by agree-
ment. In North American Association for Computational 
Linguistics (NAACL), pages 104–111, New York City. As-
sociation for Computational Linguistics.
# Para 900 4
W. Lu, H. T. Ng, W. S. Lee, and L. S. Zettlemoyer. 2008. A 
generative model for parsing natural language to meaning 
representations. In Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 783–792.
# Para 904 4
R. C. Moore. 2004. Improving IBM word alignment model 
1. In Association for Computational Linguistics (ACL), 
pages 518–525, Barcelona, Spain. Association for Com-
putational Linguistics.
# Para 908 4
H. Ney and S. Vogel. 1996. HMM-based word align-
ment in statistical translation. In International Conference 
on Computational Linguistics (COLING), pages 836–841. 
Association for Computational Linguistics.
# Para 912 3
J. M. Siskind. 1996. A computational study of cross- 
situational techniques for learning word-to-meaning map-
pings. Cognition, 61:1–38.
# Para 915 4
B. Snyder and R. Barzilay. 2007. Database-text alignment 
via structured multilabel classification. In International 
Joint Conference on Artificial Intelligence (IJCAI), pages 
1713–1718, Hyderabad, India.
# Para 919 4
C. Yu and D. H. Ballard. 2004. On the integration of ground-
ing language and learning objects. In Association for the 
Advancement ofArtificial Intelligence (AAAI), pages 488– 
493, Cambridge, MA. MIT Press.
# Para 923 4
L. S. Zettlemoyer and M. Collins. 2005. Learning to map 
sentences to logical form: Structured classification with 
probabilistic categorial grammars. In Uncertainty in Arti-
ficial Intelligence (UAI), pages 658–666.
# Para 927 5
L. S. Zettlemoyer and M. Collins. 2007. Online learn-
ing of relaxed CCG grammars for parsing to logical 
form. In Empirical Methods in Natural Language Pro-
cessing and Computational Natural Language Learning 
(EMNLP/CoNLL), pages 678–687.
# Para 932 1
99
