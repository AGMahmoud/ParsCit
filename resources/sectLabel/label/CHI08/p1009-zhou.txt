note ||| CHI 2008 Proceedings Â· Help Me Search	April 5-10, 2008 Â· Florence, Italy
title ||| Conversation Pivots and Double Pivots
author ||| Daniel Xiaodan Zhou, Nathan Oostendorp, Michael Hess, Paul Resnick
affiliation ||| CommunityLab*
affiliation ||| University of Michigan School of Information
address ||| Ann Arbor, MI 48109
email ||| {mrzhou, oostendo, mlhess, presnick}@umich.edu
sectionHeader ||| ABSTRACT
bodyText ||| Many sites on the web offer collaborative databases that
bodyText ||| catalog items such as bands, events, products, or software
bodyText ||| modules. Conversation pivots allow readers to navigate
bodyText ||| from pages about these items to conversations about them
bodyText ||| on the same site or elsewhere on the Internet. Double pivots
bodyText ||| allow readers to navigate from item pages to pages about
bodyText ||| other items mentioned in the same conversations. Using
bodyText ||| text mining techniques specific to the collection it is
bodyText ||| possible to find references to collected items in online
bodyText ||| conversations. We implemented conversation pivots for the
bodyText ||| CPAN archive of Perl modules, and for Drupal.org, the
bodyText ||| reference site for the Drupal content management system.
sectionHeader ||| Author Keywords
keyword ||| Online Discussion, Conversation, Recommender, Pivot,
keyword ||| Drupal, Perlmonks
sectionHeader ||| ACM Classification Keywords
category ||| H5.4 Hypertext/Hypermedia Navigation. H5.2. User
category ||| Interfaces
sectionHeader ||| INTRODUCTION
bodyText ||| Many websites maintain collections of pages about people,
bodyText ||| places, and things. These item pages typically include
bodyText ||| structured data. The sites also frequently include online
bodyText ||| forums, with an abundant and unstructured repository of
bodyText ||| user-contributed data about the same items. Drenner et al
bodyText ||| [1] describe these areas as âitem-landâ and âforum-landâ,
bodyText ||| and describe how the site MovieLens was able to cross-link
bodyText ||| them. Movie item pages have links to conversation threads
bodyText ||| mentioning the movies and conversation pages link to the
bodyText ||| referenced movie pages.
bodyText ||| More generally, item-land describes a large variety of
bodyText ||| online collections:
copyright ||| Permission to make digital or hard copies of all or part of this work for
copyright ||| personal or classroom use is granted without fee provided that copies are
copyright ||| not made or distributed for profit or commercial advantage and that copies
copyright ||| bear this notice and the full citation on the first page. To copy otherwise,
copyright ||| or republish, to post on servers or to redistribute to lists, requires prior
copyright ||| specific permission and/or a fee.
note ||| CHI 2008, April 5â10, 2008, Florence, Italy.
copyright ||| Copyright 2008 ACM 978-1-60558-011-1/08/04...$5.00
listItem ||| â¢	Musician profiles on MySpace.com or Last.fm
listItem ||| â¢	Concert or other event listing in a public calendar
listItem ||| â¢	Wikipedia entries for people, places, or things
listItem ||| â¢	Product pages (e.g., on Amazon.com)
listItem ||| â¢	Software module pages on a repository such as PEAR
listItem ||| or CPAN
bodyText ||| It is easy to imagine how bridges between âitem-landâ and
bodyText ||| âforum-landâ could be very useful in these contexts,
bodyText ||| especially when âforum-landâ might be separate from the
bodyText ||| item collection (i.e., on a separate website.)
bodyText ||| While previous work has explored the connections in the
bodyText ||| case of movie items, we explore them in the case of item
bodyText ||| pages that describe software modules. We explain how the
bodyText ||| unique features of software modules and conversation
bodyText ||| threads can be used in inferring links between them. We
bodyText ||| also show how these links can be used not only to help
bodyText ||| navigate from software modules to related conversation but
bodyText ||| also from software modules to related modules.
sectionHeader ||| CONVERSATION PIVOTS
bodyText ||| Links between items and forums are instances of a more
bodyText ||| general class of navigation aids that we call pivots. A pivot
bodyText ||| enables navigation from an object to a set of other objects
bodyText ||| that share some attribute in common. Perhaps the most
bodyText ||| familiar instantiation of the pivot concept is the ability, at
bodyText ||| sites such as del.icio.us and Flickr and many individual
bodyText ||| blogs, to click on a âtagâ in order to move from one page or
bodyText ||| photo to a set of others that have been classified with the
bodyText ||| same tag. Many other pivots are possible. For example, a
bodyText ||| pivot can allow navigation from a message to other
bodyText ||| messages by the same author, or from an event
bodyText ||| announcement to other events at the same venue, or other
bodyText ||| events at the same time, or other events featuring the same
bodyText ||| speaker.1
footnote ||| * CommunityLab is a collaborative project of the University of
footnote ||| Minnesota, University of Michigan, and Carnegie Mellon
footnote ||| University. http://www.communitylab.org/
footnote ||| 1 We borrow this usage of the term pivot from spreadsheet
footnote ||| pivot tables and from the description of features of the Ning
footnote ||| platform for building social applications. [2]
page ||| 1009
note ||| CHI 2008 Proceedings Â· Help Me Search	April 5-10, 2008 Â· Florence, Italy
table ||| 		Messages
table ||| 		T4	T2	T3	T4a	T4b
table ||| 	S1	0	1	0	1	0
table ||| 	S2	1	0	1	0	0
table ||| 	S3	1	0	1	0	1
tableCaption ||| Table 1. A matrix representing the pivot from software
tableCaption ||| modules to conversation messages that reference them.
tableCaption ||| Target messages T4a and T4b are from the same thread.
bodyText ||| More formally, we define a pivot as a function that maps
bodyText ||| from source items to subsets of a set of target items. The
bodyText ||| pivots can be represented as a matrix P, with one row for
bodyText ||| each source item and one column for each target item. Each
bodyText ||| cell in the matrix indicates whether the source and target are
bodyText ||| related (i.e., share a âcommon attributeâ).
bodyText ||| In the case of conversation pivots for software modules, the
bodyText ||| source items are pages describing software modules and the
bodyText ||| targets are messages. A cellâs value encodes whether the
bodyText ||| message mentions the software module. For example, as
bodyText ||| shown in Table 1, message T3 refers to the software
bodyText ||| module that page S1 describes but not the modules
bodyText ||| described by pages S2 and S3.
bodyText ||| Depending on the application, it may be useful to
bodyText ||| automatically display on a source page a pivot block with
bodyText ||| links to a few targets. In other applications, users may need
bodyText ||| to explicitly request that related targets be displayed. This is
bodyText ||| common, for example, in tagging interfaces, where a user
bodyText ||| has to click on a tag before the set of related items is
bodyText ||| displayed. In either case, if too many target items are
bodyText ||| related to a single source, it is helpful to order them based
bodyText ||| on which are likely to be most useful when navigating from
bodyText ||| that source item. To accommodate that, a cell in the pivot
bodyText ||| matrix can contain a similarity or relevance score based on
bodyText ||| frequency or prominence of the reference, rather than just a
bodyText ||| binary indicator of a reference to the source item.
bodyText ||| We have implemented, but not yet publicly released
bodyText ||| conversation pivot blocks for two popular software
bodyText ||| platforms, Drupal and CPAN. On the Drupal.org website,
bodyText ||| there is a page for each of the hundreds of available add-on
bodyText ||| modules. The Related Discussion block, on the top right in
bodyText ||| Figure 1, will add links to related conversations that occur
bodyText ||| in the Drupal forums, elsewhere on the site. Each link is to
bodyText ||| an entire thread, scrolled to the first message in the thread
bodyText ||| that references the module.
bodyText ||| For the programming language Perl, there are thousands of
bodyText ||| software libraries, also referred to as modules, that
bodyText ||| programmers can download from a site called CPAN. Each
bodyText ||| module gets its own page on CPAN, with information about
bodyText ||| its history and status and a link to download the actual code.
bodyText ||| We have focused on an experimental mirror site called
bodyText ||| AnnoCPAN that displays user annotations on the module
bodyText ||| pages. The CPAN and AnnoCPAN sites do not host
figureCaption ||| Figure 1. The Drupal.org website with (A) pivot to
figureCaption ||| related conversations and (B) double-pivot to other
bodyText ||| conversations about Perl or Perl modules. One popular
bodyText ||| venue for such conversations is a website called Perlmonks.
bodyText ||| We have implemented a conversation pivot block for
bodyText ||| AnnoCPAN that shows links to related conversation threads
bodyText ||| on the Perlmonks website, as shown in Figure 2.
bodyText ||| We exploit the structure and chronology of conversation
bodyText ||| threads to help determine which messages are most
bodyText ||| important. Among messages that reference a software
bodyText ||| module, conversations that are longer and more recent are
bodyText ||| more likely to be useful to display in a pivot block.
bodyText ||| Although each link in a pivot block points to a particular
bodyText ||| message in a thread, we compute the messageâs importance
bodyText ||| based on features of the entire thread. Our initial
bodyText ||| implementation simply computes a timestamp based on the
bodyText ||| time of the most recent message posted in the thread.
bodyText ||| Among messages that reference the source item, those
bodyText ||| whose threads have more recent activity are shown first.
bodyText ||| Without the conversation pivot blocks, people could use a
bodyText ||| search engine to seek forum references to particular
bodyText ||| software modules. This would require significant user
bodyText ||| effort. Moreover, we are able to tune our search algorithm
bodyText ||| to take advantage of the structure of software module pages
bodyText ||| and conversation threads, in a way that would be difficult
bodyText ||| for users to simulate if they had to construct their own
bodyText ||| search queries.
subsectionHeader ||| Double Pivots
bodyText ||| Any pivot matrix relating source items to subsets of target
bodyText ||| items can be used to generate another pivot matrix relating
bodyText ||| the source items back to subsets of those same source items.
bodyText ||| For example, from the page for a software module, we can
bodyText ||| display a pivot block of other related software modules, as
bodyText ||| shown in the âRelated Modulesâ blocks in Figures 1 and 2.
bodyText ||| This can help users identify complementary modules and
figure ||| A
figure ||| B
page ||| 1010
note ||| CHI 2008 Proceedings Â· Help Me Search	April 5-10, 2008 Â· Florence, Italy
bodyText ||| especially substitutes that may be preferable to the current
bodyText ||| module.
bodyText ||| Conceptually, the double pivot block automatically follows
bodyText ||| the pivot to related conversation threads and then pivots
bodyText ||| again to a set of modules that are also referenced by those
bodyText ||| threads. Such a process would be tedious, however, for
bodyText ||| users to perform manually. By automatically aggregating
bodyText ||| the other module references from the set of messages that
bodyText ||| reference the current module, the body of contributing
bodyText ||| content is much larger than just the few messages that can
bodyText ||| be displayed to a user on a page.
bodyText ||| The double-pivot technique is closely related to the
bodyText ||| technique of item-item collaborative filtering [3], where
bodyText ||| two items are related if they are highly rated (or purchased)
bodyText ||| by the same people. It is also analogous to co-citation
bodyText ||| analysis in bibliometrics, where two papers are related if
bodyText ||| they are cited in the same other paper [4].
bodyText ||| In computing conversation double pivots, we first collapse
bodyText ||| messages into threads. Column T4a in Table 1 is a message
bodyText ||| that might have said something like, âModule S 1 doesnât
bodyText ||| quite do what I need. Anyone have suggestions?â T4b is a
bodyText ||| reply suggesting module S3 as an alternative. Other users,
bodyText ||| when visiting the page for module S1, might then benefit
bodyText ||| from a double pivot link to S3, even though no single
bodyText ||| message mentions both S1 and S3. Thus, we treat two
bodyText ||| modules as related if they are referenced in the same thread.
bodyText ||| Table 2 illustrates the double pivot matrix resulting from
bodyText ||| the original matrix from Table 1. It indicates that S1 and S2
bodyText ||| are never referenced in the same thread, but S2 and S3 are
bodyText ||| both referenced in two different threads, and S1 and S3 in
bodyText ||| one thread. Thus, the double pivot block for the page about
bodyText ||| S2 would include a link to S3 but not to S1.
bodyText ||| More sophisticated implementations of the double pivot
bodyText ||| would account for the overall popularity of source items.
bodyText ||| For example, when two modules that are rarely referenced
bodyText ||| are referenced in the same thread, it is a stronger indicator
bodyText ||| that the two are related than when the same outcome occurs
bodyText ||| for a pair of frequently referenced modules.
table ||| 		Software Module
table ||| 		S1	S2	S3
table ||| 	S1	2	0	1
table ||| 	S2	0	2	2
table ||| 	S3	1	2	3
tableCaption ||| Table 2. Module by Module Associations from a double pivot
sectionHeader ||| DETECTING CONVERSATION SUBJECTS
bodyText ||| The pivot matrix is constructed by examining the potential
bodyText ||| target threads to see which source items they reference. One
bodyText ||| possibility would be to rely on message authors to explicitly
bodyText ||| link to source items rather than using natural language to
bodyText ||| identify them. Tools such as auto-complete could simplify
bodyText ||| this task for message authors. Even so, it seems unwise to
bodyText ||| depend on authors to do this, since the primary beneficiaries
bodyText ||| would not be the authors or even the readers of the
bodyText ||| messages, but unknown and unseen future visitors to
bodyText ||| module pages.
bodyText ||| Instead, a software program can automatically infer
bodyText ||| references to items as they are naturally expressed in
bodyText ||| messages, albeit with some error. The errors will be
bodyText ||| reduced to the extent that authors refer to items using
bodyText ||| distinctive canonical identifiers, such as ISBN numbers. For
bodyText ||| example, the PHOAKS project mined Usenet for references
bodyText ||| to web pages, where the natural way to refer to a site in
bodyText ||| conversation was to put in a complete URL [5].
bodyText ||| Two factors make it practical to automatically mine
bodyText ||| conversations for software module references. The first is a
bodyText ||| high tolerance for errors of omission: detecting even a small
bodyText ||| fraction of the actual references to software modules may
bodyText ||| be sufficient to generate useful pivot and double-pivot
bodyText ||| blocks for navigation. The second factor is that there are
bodyText ||| regularities in module names and in patterns of reference to
bodyText ||| them that can be exploited when creating a reference index.
bodyText ||| Some software systems employ a naming system that
bodyText ||| allows exact string matching on module titles to perform
bodyText ||| well. Perl modules follow a hierarchical naming convention
bodyText ||| with â::â as a separator found rarely in normal conversation.
bodyText ||| If the text string âTime::ParseDateâ appears in a message,
bodyText ||| the author almost certainly meant to refer to the Perl
bodyText ||| module of that name, so that exact matching on module
bodyText ||| titles will have high precision. Moreover, a social norm has
bodyText ||| emerged so that an author who wants to refer to that module
bodyText ||| will typically use that text string to refer to it, rather than a
bodyText ||| shorter alias such as ParseDate. Thus, exact text matching
bodyText ||| will retrieve the correct references with high recall as well,
bodyText ||| although it will occasionally miss matches due to
bodyText ||| misspellings.
figure ||| A
figure ||| B
figureCaption ||| Figure 2. CPAN with a (A) conversation pivot to
figureCaption ||| Perlmonks.org, and a (B) double-pivot to related modules
page ||| 1011
note ||| CHI 2008 Proceedings Â· Help Me Search	April 5-10, 2008 Â· Florence, Italy
bodyText ||| In mining Perlmonks conversations, we used the exact
bodyText ||| matching on module titles technique. Of 550,679 total
bodyText ||| comments that had been posted on the Perlmonks site, 16%
bodyText ||| contained module references. Some messages contained
bodyText ||| long lists of modules; it seemed unlikely that a user
bodyText ||| examining any particular module would find it useful to
bodyText ||| navigate to a message containing a long list that happened
bodyText ||| to contain the source module, so we discarded those
bodyText ||| messages. Even after discarding 35 outliers that referenced
bodyText ||| more than ten modules each, 41% of the 4,548 total CPAN
bodyText ||| modules were cited on Perlmonks, and those had a median
bodyText ||| of 5 references.
bodyText ||| Based on those detected module references, excluding 35
bodyText ||| outliers, we computed the double pivot matrix. Of the 1,884
bodyText ||| modules that were cited at all, 1,702 had at least one other
bodyText ||| module co-cited in the same conversation. Of these, the
bodyText ||| median number of ârelated modulesâ was 6.
bodyText ||| String matching on titles can be extended to include
bodyText ||| searching for distinctive aliases. For example, most authors
bodyText ||| refer to the Drupal module titled âContent Construction Kit
bodyText ||| (CCK)â as âCCKâ rather than using the full title. Even if it
bodyText ||| is unrealistic to expect all message authors to tag all their
bodyText ||| references to modules, it may be quite reasonable to expect
bodyText ||| the authors of the module pages to identify aliases that are
bodyText ||| frequently used in conversation. The authors of those pages,
bodyText ||| typically the people responsible for maintaining the
bodyText ||| software modules, have both the knowledge of commonly
bodyText ||| used aliases and the incentive to enter them in to the
bodyText ||| system, in order to help users find what others are saying
bodyText ||| about the modules.
bodyText ||| String matching on titles can also be narrowed to handle
bodyText ||| situations where it would yield too many false positives.
bodyText ||| Some software systems use module titles that are
bodyText ||| potentially ambiguous. For example, Drupal modules
bodyText ||| generally use common words such as âEventâ or âUploadâ
bodyText ||| for titles. Simple text matching on these titles would yield
bodyText ||| many false positives, conversation messages that use these
bodyText ||| words but not in reference to the software modules. Real
bodyText ||| references to the Upload module, however, frequently
bodyText ||| contain the word âmoduleâ in close proximity to the word
bodyText ||| âUploadâ. Thus, a matching algorithm that searches for the
bodyText ||| title adjacent to the magic word âmoduleâ will likely
bodyText ||| generate many fewer false positives, though possibly
bodyText ||| missing more correct references.
bodyText ||| We used this method to find module references in the
bodyText ||| Drupal.org conversation forums. Of 292,139 messages,
bodyText ||| 47,794 contained at least one module reference. After
bodyText ||| discarding 21 outliers that each referred to more than ten
bodyText ||| modules, 915 of the 1,590 modules were cited in at least
bodyText ||| one message and those had a median of 6 references.
bodyText ||| Based on those detected module references, we computed
bodyText ||| the double pivot matrix. Of the 915 modules that were cited
bodyText ||| at all, 747 had at least one other module co-cited in the
bodyText ||| same conversation. Of these, the median number of ârelated
bodyText ||| modulesâ was 6.
sectionHeader ||| CONCLUSIONS AND FUTURE RESEARCH
bodyText ||| The results from our implementations with Drupal.org and
bodyText ||| AnnoCPAN/Perlmonks lead us to believe that conversation
bodyText ||| pivots and double pivots hold a great deal of promise for
bodyText ||| making online collections more useful for users. By
bodyText ||| automatically mining forum data for item references and
bodyText ||| generating recommendations of other modules we provide
bodyText ||| users with a shortcut through time-intensive manual search.
bodyText ||| The vision of the semantic web [6] is that information for
bodyText ||| human consumption will also be tagged in a way that
bodyText ||| computers can process in useful ways. When semantic
bodyText ||| markup is not available, however, it may be possible to
bodyText ||| infer it imperfectly, but well enough to enable particular
bodyText ||| kinds of processing. We have developed techniques for
bodyText ||| detecting references to software modules in online
bodyText ||| conversations that are sufficient to enable the creation of
bodyText ||| navigation aids in the form of conversation pivots and
bodyText ||| double pivots. The techniques may be extensible to creating
bodyText ||| conversation pivots for other types of items.
sectionHeader ||| ACKNOWLEDGEMENTS
bodyText ||| This material is based upon work supported by the National
bodyText ||| Science Foundation under Grant Nos. 0308006 and
bodyText ||| 0325837. We wish to thank the administrators of
bodyText ||| Drupal.org and Perlmonks.org for allowing us access to
bodyText ||| their data sets and to Ivan Tubert-Brohman for allowing us
bodyText ||| to add the pivot feature to the AnnoCPAN site.
sectionHeader ||| REFERENCES
reference ||| 1. Drenner, S., Harper, M., Frankowski, D., Riedl, J., and
reference ||| Terveen, L. Insert movie reference here: a system to
reference ||| bridge conversation and item-oriented web sites. In
reference ||| Proceedings of the SIGCHI Conference on Human
reference ||| Factors in Computing Systems CHI &apos;06 (2006)
reference ||| 2. Ning Platform Pivots Feature. http://blog.ning.com/
reference ||| 2005/11/new_on_the_ning_pivot.html
reference ||| 3. Linden, G., Smith, B., York, J. Amazon.com
reference ||| recommendations: item-to-item collaborative filtering,
reference ||| Internet Computing, IEEE, 7, 1 (2003), 76-80.
reference ||| 4. Small, H. Co-citation in the scientific literature: A new
reference ||| measure of the relationship between two documents.
reference ||| Journal of the American Society for Information
reference ||| Science, vol. 24, 4 (1973), 265 â 269.
reference ||| 5. Terveen, L., Hill, W., Amento, B., McDonald, D., and
reference ||| Creter, J. PHOAKS: a system for sharing
reference ||| recommendations. Communications of the ACM. 40, 3
reference ||| (1997), 59 â 62.
reference ||| 6. Berners-Lee, T., Hendler, J., and Lassila,O.,The
reference ||| semantic web. Scientific American. 284 (2001), 5, 34.
page ||| 1012
