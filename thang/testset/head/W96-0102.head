<?xml version="1.0" encoding="UTF-8"?>
<file>
  <entry no="0">
    <variant no="0" confidence="1.0"><title>A Memory-Based Part of Speech Tagger-Generator +L+ </title><author>Walter Daelemans, Jakub Zavrel +L+ </author><affiliation>Computational Linguistics and AI +L+ Tilburg University +L+ </affiliation><address>P.O. Box 90153, NL-5000 LE Tilburg </address><email>+L+ {walter. daelemans, zavrel}~kub, nl +L+ </email><author>Peter Berck, Steven Gillis +L+ </author><affiliation>Center for Dutch Language and Speech +L+ University of Antwerp +L+ Universiteitsplein </affiliation><abstract>1, B-2610 Wilrijk +L+ {peter. berck, steven, gillis}@uia, ua. ac. be +L+ Abstract +L+ We introduce a memory-based approach to part of speech tagging. Memory-based +L+ learning is a form of supervised learning based on similarity-based reasoning. The part +L+ of speech tag of a word in a particular context is extrapolated from the most similar +L+ cases held in memory. Supervised learning approaches are useful when a tagged corpus +L+ is available as an example of the desired output of the tagger. Based on such a corpus, +L+ the tagger-generator automatically builds a tagger which is able to tag new text the +L+ same way, diminishing development time for the construction of a tagger considerably. +L+ Memory-based tagging shares this advantage with other statistical or machine learning +L+ approaches. Additional advantages specific to a memory-based approach include (i) the +L+ relatively small tagged corpus size sufficient for training, (ii) incremental learning, (iii) +L+ explanation capabilities, (iv) flexible integration of information in case representations, +L+ (v) its non-parametric nature, (vi) reasonably good results on unknown words without +L+ morphological analysis, and (vii) fast learning and tagging. In this paper we show that +L+ a large-scale application of the memory-based approach is feasible: we obtain a tagging +L+ accuracy that is on a par with that of known statistical approaches, and with attractive +L+ space and time complexity properties when using IGTree, a tree-based formalism for +L+ indexing and searching huge case bases. The use of IGTree has as additional advantage +L+ that optimal context size for disambiguation is dynamically computed. +L+ </abstract></variant>
  </entry>
  <entry no="1">
  </entry>
</file>
