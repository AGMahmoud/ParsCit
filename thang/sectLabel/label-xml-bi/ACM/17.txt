title ||| A Pseudo Random Coordinated Scheduling Algorithm for |XML| xmlLoc_0 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_largest-2 xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_header
title ||| Bluetooth Scatternets |XML| xmlLoc_0 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_largest-2 xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_header
author ||| Andr´as R´acz, Gy¨orgy Mikl´os, Ferenc Kubinszky, Andr´as Valk´o |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_header
affiliation ||| Traffic Analysis and Network Performance Lab., Ericsson Research |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_header
address ||| Laborc 1, 1037 Budapest, Hungary |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_header
address ||| Ph: +36-1-4377621, Fax: +36-1-4377767 |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_header
email ||| Andras.Racz@eth.ericsson.se |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_header
sectionHeader ||| ABSTRACT |XML| xmlLoc_2 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| The emergence of Bluetooth as a default radio interface allows |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| handheld devices to be rapidly interconnected into ad hoc networks. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Bluetooth allows large numbers of piconets to form a scatternet us- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing designated nodes that participate in multiple piconets. A unit |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that participates in multiple piconets can serve as a bridge and for- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| wards traffic between neighbouring piconets. Since a Bluetooth |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| unit can transmit or receive in only one piconet at a time, a bridging |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| unit has to share its time among the different piconets. To sched- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ule communication with bridging nodes one must take into account |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| their availability in the different piconets, which represents a dif- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ficult, scatternet wide coordination problem and can be an impor- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tant performance bottleneck in building scatternets. In this paper |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| we propose the Pseudo-Random Coordinated Scatternet Schedul- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing (PCSS) algorithm to perform the scheduling of both intra and |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| inter-piconet communication. In this algorithm Bluetooth nodes |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| assign meeting points with their peers such that the sequence of |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| meeting points follows a pseudo random process that is different |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| for each pair of nodes. The uniqueness of the pseudo random se- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| quence guarantees that the meeting points with different peers of |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the node will collide only occasionally. This removes the need |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| for explicit information exchange between peer devices, which is |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a major advantage of the algorithm. The lack of explicit signaling |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| between Bluetooth nodes makes it easy to deploy the PCSS algo- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| rithm in Bluetooth devices, while conformance to the current Blue- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tooth specification is also maintained. To assess the performance of |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the algorithm we define two reference case schedulers and perform |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| simulations in a number of scenarios where we compare the perfor- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| mance of PCSS to the performance of the reference schedulers. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| Keywords |XML| xmlLoc_5 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
keyword ||| Bluetooth, scheduling, inter-piconet communication, scatternet |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
sectionHeader ||| 1. INTRODUCTION |XML| xmlLoc_6 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Short range radio technologies enable users to rapidly interconnect |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| handheld electronic devices such as cellular phones, palm devices |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| or notebook computers. The emergence of Bluetooth [1] as de- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
copyright ||| Permission to make digital or hard copies of part or all of this work or |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
copyright ||| personal or classroom use is granted without fee provided that copies are |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
copyright ||| not made or distributed for profit or commercial advantage and that copies |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
copyright ||| bear this notice and the full citation on the first page. To copy otherwise, to |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
copyright ||| republish, to post on servers, or to redistribute to lists, requires prior |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
copyright ||| specific permission and/or a fee. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
note ||| MobiHOC 2001, Long Beach, CA, USA |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
copyright ||| © ACM 2001 1-58113-390-1/01/10...$5.00 |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| fault radio interface in these devices provides an opportunity to turn |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| them from stand-alone tools into networked equipment. Building |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Bluetooth ad hoc networks also represents, however, a number of |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| new challenges, partly stemming from the fact that Bluetooth was |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| originally developed for single hop wireless connections. In this |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| paper we study the scheduling problems of inter-piconet commu- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nication and propose a lightweight scheduling algorithm that Blue- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tooth nodes can employ to perform the scheduling of both intra and |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| inter-piconet communication. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Bluetooth is a short range radio technology operating in the unli- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| censed ISM (Industrial-Scientific-Medical) band using a frequency |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| hopping scheme. Bluetooth (BT) units are organized into piconets. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| There is one Bluetooth device in each piconet that acts as the mas- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ter, which can have any number of slaves out of which up to seven |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| can be active simultaneously. The communication within a piconet |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is organized by the master which polls each slave according to some |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| polling scheme. A slave is only allowed to transmit in a slave- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to-master slot if it has been polled by the master in the previous |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| master-to-slave slot. In Section 3 we present a brief overview of |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the Bluetooth technology. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| A Bluetooth unit can participate in more than one piconet at any |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| time but it can be a master in only one piconet. A unit that par- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ticipates in multiple piconets can serve as a bridge thus allowing |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the piconets to form a larger network. We define bridging degree |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| as the number of piconets a bridging node is member of. A set |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of piconets that are all interconnected by such bridging units is re- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ferred to as a scatternet network (Figure 1). Since a Bluetooth unit |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| can transmit or receive in only one piconet at a time, bridging units |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| must switch between piconets on a time division basis. Due to the |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| fact that different piconets are not synchronized in time a bridging |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| unit necessarily loses some time while switching from one piconet |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to the other. Furthermore, the temporal unavailability of bridging |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nodes in the different piconets makes it difficult to coordinate the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| communication with them, which impacts throughput and can be |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| an important performance constraint in building scatternets. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| There are two important phenomena that can reduce the efficiency |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| of the polling based communication in Bluetooth scatternets: |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
listItem ||| •	slaves that have no data to transmit may be unnecessarily |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
listItem ||| polled, while other slaves with data to transmit may have to |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
listItem ||| wait to be polled; and |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
listItem ||| •	at the time of an expected poll one of the nodes of a master- |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
listItem ||| slave node pair may not be present in the piconet (the slave |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 1: Example scatternet |XML| xmlLoc_2 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| that is being polled is not listening or the master that is ex- |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| pected to poll is not polling). |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The first problem applies to polling based schemes in general, while |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| the second one is specific to the Bluetooth environment. In or- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| der to improve the efficiency of inter-piconet communication the |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scheduling algorithm has to coordinate the presence of bridging |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nodes in the different piconets such that the effect of the second |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| phenomenon be minimized. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| However, the scheduling of inter-piconet communication expands |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| to a scatternet wide coordination problem. Each node that has more |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| than one Bluetooth links have to schedule the order in which it com- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| municates with its respective neighbours. A node with multiple |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Bluetooth links can be either a piconet master or a bridging node or |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| both. The scheduling order of two nodes will mutually depend on |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| each other if they have a direct Bluetooth link in which case they |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| have to schedule the communication on their common link for the |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| same time slots. This necessitates some coordination between the |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| respective schedulers. For instance in Figure 1 the scheduling order |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of node A and the scheduling order of its bridging neighbours, B, |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| C, D and E mutually depend on each other, while nodes D and E |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| further effects nodes F, G and H as well. Furthermore, the possi- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ble loops in a scatternet (e.g., A-E-G-H-F-D) makes it even more |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| complicated to resolve scheduling conflicts. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In case of bursty traffic in the scatternet the scheduling problem |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| is further augmented by the need to adjust scheduling order in re- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| sponse to dynamic variation of traffic intensity. In a bursty traffic |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| environment it is desirable that a node spends most of its time on |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| those links that have a backlogged burst of data. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| One way to address the coordination problem of inter-piconet |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| scheduling is to explicitly allocate, in advance, time slots for com- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| munication in each pair of nodes. Such a hard coordination ap- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| proach eliminates ambiguity with regards to a node’s presence in |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| piconets, but it implies a complex, scatternet wide coordination |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| problem and requires explicit signaling between nodes of a scat- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ternet. In the case of bursty traffic, hard coordination schemes |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| generate a significant computation and signaling overhead as the |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| communication slots have to be reallocated in response to changes |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in traffic intensity and each time when a new connection is estab- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| lished or released. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In this paper we propose the Pseudo-Random Coordinated Scatter- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| net Scheduling algorithm which falls in the category of soft coor- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| dination schemes. In soft coordination schemes nodes decide their |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| presence in piconets based on local information. By nature, soft co- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ordination schemes cannot guarantee conflict-free participation of |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bridging nodes in the different piconets, however, they have a sig- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nificantly reduced complexity. In the PCSS algorithm coordination |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is achieved by implicit rules in the communication without the need |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of exchanging explicit control information. The low complexity of |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the algorithm and its conformance to the current Bluetooth specifi- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| cation allow easy implementation and deployment. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The first key component of the algorithm is the notion of check- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| points which are defined in relation to each pair of nodes that |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| are connected by a Bluetooth link and which represent predictable |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| points in time when packet transmission can be initiated on the par- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ticular link. In other words, checkpoints serve as regular meeting |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| points for neighboring nodes when they can exchange packets. In |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| order to avoid systematic collision of checkpoints on different links |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of a node the position of checkpoints follows a pseudo random se- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| quence that is specific to the particular link the checkpoints belong |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The second key component of the algorithm is the dynamic adjust- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| ment of checking intensity, which is necessary in order to effec- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tively support bursty data traffic. Bandwidth can be allocated and |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| deallocated to a particular link by increasing and decreasing check- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| point intensity, respectively. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| To assess the performance of the algorithm we define two reference |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| schedulers and relate the performance of the PCSS scheme to these |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| reference algorithms in a number of simulation scenarios. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The remainder of the paper is structured as follows. In Section 2 we |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| give an overview of related work focusing on Bluetooth scheduling |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| related studies available in the literature. Section 3 gives a brief |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| overview of the Bluetooth technology. In Section 4 and 5 we intro- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| duce the proposed algorithm. In Section 6 we define the reference |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| schedulers. Finally, in Section 7 we present simulation results. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 2. RELATED WORK |XML| xmlLoc_5 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| A number of researchers have addressed the issue of scheduling in |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Bluetooth. Most of these studies have been restricted, however, to |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the single piconet environment, where the fundamental question is |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the polling discipline used by the piconet master to poll its slaves. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| These algorithms are often referred to as intra-piconet scheduling |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| schemes. In [7] the authors assume a simple round robin polling |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scheme and investigate queueing delays in master and slave units |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| depending on the length of the Bluetooth packets used. In [5] Jo- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| hansson et al. analyze and compare the behavior of three differ- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ent polling algorithms. They conclude that the simple round robin |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scheme may perform poorly in Bluetooth systems and they propose |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a scheme called Fair Exhaustive Polling. The authors demonstrate |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the strength of this scheme and argue in favor of using multi-slot |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| packets. Similar conclusions are drawn by Kalia et al. who argue |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that the traditional round robin scheme may result in waste and un- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| fairness [8]. The authors propose two new scheduling disciplines |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that utilize information about the status of master and slave queues. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In [9, 10] the authors concentrate on scheduling policies designed |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| with the aim of low power consumption. A number of schedul- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing policies are proposed which exploit either the park or sniff low |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| power modes of Bluetooth. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| B |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| E |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| A |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| G |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| C |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| D |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| H |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| F |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| master |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| slave |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| slave in two piconets |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| slave in one piconet and master in another |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| Although the above studies have revealed a number of important |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| performance aspects of scheduling in Bluetooth piconets, the algo- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| rithms developed therein are not applicable for inter-piconet com- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| munication. In [6] the authors have shown that constructing an op- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| timal link schedule that maximizes total throughput in a Bluetooth |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scatternet is an NP hard problem even if scheduling is performed |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| by a central entity. The authors also propose a scheduling algo- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| rithm referred to as Distributed Scatternet Scheduling Algorithm |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| (DSSA), which falls in the category of distributed, hard coordina- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tion schemes. Although the DSSA algorithm provides a solution |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| for scheduling communication in a scatternet, some of its idealized |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| properties (e.g., nodes are aware of the traffic requirements of their |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| neighbours) and its relatively high complexity make it difficult to |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| apply it in a real life environment. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| There is an ongoing work in the Personal Area Networking (PAN) |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| working group of the Bluetooth Special Interest Group (SIG) [2] to |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| define an appropriate scheduling algorithm for Bluetooth scatter- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nets. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 3. BLUETOOTH BACKGROUND |XML| xmlLoc_2 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Bluetooth is a short range radio technology that uses frequency |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| hopping scheme, where hopping is performed on 79 RF channels |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| spaced 1 MHz apart. Communication in Bluetooth is always be- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tween master and slave nodes. Being a master or a slave is only |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a logical state: any Bluetooth unit can be a master or a slave. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The Bluetooth system provides full-duplex transmission based on |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| slotted Time Division Duplex (TDD) scheme, where each slot is |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| 0.625 ms long. Master-to-slave transmission always starts in an |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| even-numbered time slot, while slave-to-master transmission al- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ways starts in an odd-numbered time slot. A pair of master-to-slave |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and slave-to-master slots are often referred to as a frame. The com- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| munication within a piconet is organized by the master which polls |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| each slave according to some polling scheme. A slave is only al- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| lowed to transmit in a slave-to-master slot if it has been polled by |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the master in the previous master-to-slave slot. The master may |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| or may not include data in the packet used to poll a slave. Blue- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tooth packets can carry synchronous data (e.g., real-time traffic) on |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Synchronous Connection Oriented (SCO) links or asynchronous |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| data (e.g., elastic data traffic, which is the case in our study) on |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Asynchronous Connectionless (ACL) links. Bluetooth packets on |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| an ACL link can be 1, 3 or 5 slot long and they can carry differ- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ent amount of user data depending on whether the payload is FEC |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| coded or not. Accordingly, the Bluetooth packet types DH 1, DH3 |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and DH5 denote 1, 3 and 5 slot packets, respectively, where the |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| payload is not FEC encoded, while in case of packet types DM1, |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| DM3 and DM5 the payload is protected with FEC encoding. There |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| are two other types of packets, the POLL and NULL packets that do |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| not carry user data. The POLL packet is used by the master when |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| it has no user data to the slave but it still wants to poll it. Similarly, |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the NULL packet is used by the slave to respond to the master if it |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| has no user data. For further information regarding the Bluetooth |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| technology the reader is referred to [1, 3]. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 4. OVERVIEW OF THE PCSS ALGO- |XML| xmlLoc_7 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
sectionHeader ||| RITHM |XML| xmlLoc_7 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Coordination in the PCSS algorithm is achieved by the unique |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| pseudo random sequence of checkpoints that is specific to each |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| master-slave node pair and by implicit information exchange be- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tween peer devices. A checkpoint is a designated Bluetooth frame. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The activity of being present at a checkpoint is referred to as to |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| check. A master node actively checks its slave by sending a packet |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to the slave at the corresponding checkpoint and waiting for a re- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| sponse from the slave. The slave node passively checks its master |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| by listening to the master at the checkpoint and sending a response |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| packet in case of being addressed. |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The expected behaviour of nodes is that they show up at each |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| checkpoint on all of their links and check their peers for available |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| user data. The exchange of user data packets started at a check- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| point can be continued in the slots following the checkpoint. A |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| node remains active on the current link until there is user data in |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| either the master-to-slave or slave-to-master directions or until it |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| has to leave for a next checkpoint on one of its other links. In |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the PCSS scheme we exploit the concept of randomness in assign- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing the position of checkpoints, which excludes the possibility that |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checkpoints on different links of a node will collide systematically, |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| thus giving the node an equal chance to visit all of its checkpoints. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The pseudo random procedure is similar to the one used to derive |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the pseudo random frequency hopping sequence. In particular, the |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| PCSS scheme assigns the positions of checkpoints on a given link |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| following a pseudo random sequence that is generated based on the |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Bluetooth clock of the master and the MAC address of the slave. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| This scheme guarantees that the same pseudo random sequence |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| will be generated by both nodes of a master-slave pair, while the se- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| quences belonging to different node pairs will be different. Figure |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| 2 shows an example for the pseudo random arrangement of check- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| points in case of a node pair A and B. The length of the current base |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checking interval is denoted by T(h k and the current checking in- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tensity is defined accordingly as e9 . There is one checkpoint |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| T(i) heck |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| within each base checking interval and the position of the check- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| point within this window is changing from one time window to the |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| other in a pseudo random manner. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 2: Pseudo-random positioning of checkpoints |XML| xmlLoc_5 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Since the pseudo random sequence is different from one link to an- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| other, checkpoints on different links of a node will collide only oc- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| casionally. In case of collision the node can attend only one of the |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| colliding checkpoints, which implies that the corresponding neigh- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bours have to be prepared for a non-present peer. That is, the mas- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ter might not poll and the slave might not listen at a checkpoint. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| We note that a collision occurs either if there are more than one |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checkpoints scheduled for the same time slot or if the checkpoints |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| are so close to each other that a packet transmission started at the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| first checkpoint necessarily overlaps the second one. Furthermore, |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| if the colliding checkpoints belong to links in different piconets, |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the necessary time to perform the switch must be also taken into |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| account. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| During the communication there is the possibility to increase or |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| decrease the intensity of checkpoints depending on the amount of |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| user data to be transmitted and on the available capacity of the |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| node. According to the PCSS algorithm a node performs certain |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| traffic measurements at the checkpoints and increases or decreases |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the current checking intensity based on these measurements. Since |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| T(Z) |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| check |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 1 frame |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| checkpoints of A toward B	checkpoints of B toward A |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| nodes decide independently about the current checking intensity |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| without explicit coordination, two nodes on a given link may select |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| different base checking periods. In order to ensure that two nodes |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| with different checking intensities on the same link can still com- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| municate we require the pseudo random generation of checkpoints |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to be such that the set of checkpoint positions at a lower checking |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| intensity is a subset of checkpoint positions at any higher checking |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| intensities. In the Appendix we are going to present a pseudo ran- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| dom scheme for generating the position of checkpoints, which has |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the desired properties. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 5. OPERATION OF PCSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| In what follows, we describe the procedures of the PCSS algorithm. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| We start by the initialization process which ensures that two nodes |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| can start communication as soon as a new link has been established |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| or the connection has been reset. Next, we describe the rules that |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| define how nodes calculate their checkpoints, decide upon their |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| presence at checkpoints and exchange packets. Finally, we present |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the way neighboring nodes can dynamically increase and decrease |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of checkpoint intensity. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 5.1 Initialization |XML| xmlLoc_2 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| In the PCSS algorithm there is no need for a separate initialization |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| procedure to start communication, since the pseudo random gener- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ation of checkpoints is defined such that once a master slave node |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| pair share the same master’s clock and slave’s MAC address infor- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| mation, it is guaranteed that the same pseudo random sequence will |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| be produced at each node. That is, it is guaranteed that two nodes |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| starting checkpoint generation at different time instants with differ- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ent checking intensities will be able to communicate. It is the own |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| decision of the nodes to select an appropriate initial checking in- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tensity, which may depend for example on the free capacities of the |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| node or on the amount of data to transmit. Once the communication |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is established the increase and decrease procedures will adjust the |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| possibly different initial checking intensities to a common value. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 5.2 Communication |XML| xmlLoc_4 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| A pair of nodes can start exchanging user data packets at a check- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| point, which can expand through the slots following the checkpoint. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The nodes remain active on the current link following a check- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| point until there is user data to be transmitted or one of them has to |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| leave in order to attend a checkpoint on one of its other links. Af- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ter a POLL/NULL packet pair has been exchanged indicating that |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| there is no more user data left the nodes switch off their transmit- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ters/receivers and remain idle until a next checkpoint comes on one |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of their links. However, during the communication any of the nodes |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| can leave in order to attend a coming checkpoint on one of its other |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| links. After one of the nodes has left the remaining peer will realize |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the absence of the node and will go idle until the time of its next |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checkpoint. If the master has left earlier the slave will realize the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| absence of the master at the next master-to-slave slot by not receiv- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing the expected poll. In the worst case the master has left before |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| receiving the last packet response from the slave, which can be a 5 |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| slot packet in which case the slave wastes 5+1 slots before realiz- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing the absence of the master. Similarly, if the master does not get |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a response from the slave it assumes that the slave has already left |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the checkpoint and goes idle until its next checkpoint. Note that the |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| master may also waste 5+1 slots in the worst case before realizing |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the absence of the slave. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| A node stores the current length of the base checking interval and |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| the time of the next checkpoint for each of its Bluetooth links sep- |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| arately. For its ith link a node maintains the variable Tcheck to |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| store the length of the current base checking period in number of |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| frames and the variable t(i) |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| check, which stores the Bluetooth clock |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| of the master at the next checkpoint. After passing a checkpoint |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the variable thheck is updated to the next checkpoint by running |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the pseudo random generator (PseudoChkGen) with the current |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| value of the master’s clock t(i) and the length of the base checking |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| period Tcheck and with the MAC address of the slave A(i) |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| slave as in- |XML| xmlLoc_1 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| put parameters; tcizeck = PseudoChkGen(Tcheck, A(i)slave, t(i)). |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| The procedure PseudoChkGen is described in the Appendix. |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
bodyText ||| There is a maximum and minimum checking interval Tmax = |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| 2fmax and Tmin = 2fmin, respectively. The length of the check- |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing period must be a power of 2 number of frames and it must take |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a value from the interval [2fmin, 2fmax]. |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 5.3 Increasing and Decreasing Checking In- |XML| xmlLoc_2 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
subsectionHeader ||| tensity |XML| xmlLoc_2 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The increase and decrease procedures are used to adjust the check- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| ing intensity of a node according to the traffic intensity and to the |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| availability of the peer device. Each node decides independently |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| about the current checking intensity based on traffic measurements |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| at checkpoints. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Since the time spent by a node on a link is proportional to the ratio |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| of the number of checkpoints on that link and the number of check- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| points on all links of the node, the bandwidth allocated to a link can |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| be controlled by the intensity of checkpoints on that link. This can |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| be shown by the following simple calculation. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Let us assume that the node has L number of links and assume |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| further that for the base checking periods on all links of the node |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| it holds that Tmin :5 T(i) |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| check < Tmax, Vi = 1, ... , L. Then the |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| average number of checkpoints within an interval of length Tmaxis |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
equation ||| L |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| N = 1 T ,)ax  , and the average time between two consecutive |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| Tcheck |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| checkpoints is |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| t=	Tmax	=		1 |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| 	N |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| 					, |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| 			L	1  Th |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| 				check |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| 			i=1 |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| provided that the pseudo random generator produces a uniformly |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| distributed sequence of checkpoints. Then, the share of link j from |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the total capacity of the node is |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| A node has to measure the utilization of checkpoints on each of |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| its links separately in order to provide input to the checking inten- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| sity increase and decrease procedures. According to the algorithm |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a given checkpoint is considered to be utilized if both nodes have |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| shown up at the checkpoint and at least one Bluetooth packet carry- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing user data has been transmitted or received. If there has not been |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a successful poll at the checkpoint due to the unavailability of any |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of the nodes or if there has been only a POLL/NULL packet pair |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| exchange but no user data has been transmitted, the checkpoint is |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| considered to be unutilized. We note that due to packet losses the |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| utilization of a given checkpoint might be interpreted differently by |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the nodes. However, this does not impact correct operation of the |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| algorithm. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| . |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| rj = |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
equation ||| 1/T(j) check |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
equation ||| L |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
equation ||| 1 |XML| xmlLoc_6 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
equation ||| T(i) |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
equation ||| i=1 check |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| To measure the utilization of checkpoints p(i) on the ith link of the |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| node we employ the moving average method as follows. The uti- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| lization of a checkpoint equals to 1 if it has been utilized, otherwise |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| it equals to 0. If the checkpoint has been utilized the variable p(i) |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is updated as, |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| p(i) = quti • p(i) + (1 — quti) • 1; |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| if the checkpoint has not been utilized it is updated as, |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| p(i) = quti • p(i) + (1 — quti) • 0, |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
bodyText ||| where 0 < quti < 1 is the time scale parameter of the moving |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| average method. A further parameter of the utilization measure- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ment is the minimum number of samples that have to be observed |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| before the measured utilization value is considered to be confident |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and can be used as input to decide about increase and decrease of |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checking intensity. This minimum number of samples is a denoted |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| by Nsample,min. |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Finally, a node also has to measure its total utilization, which is |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| defined as the fraction of time slots where the node has been active |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| (transmitted or received) over the total number of time slots. To |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| measure the total utilization of a node we employ the moving aver- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| age method again. Each node measures its own utilization p(node) |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and updates the p(node) variable after each Nuti,win number of |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| slots as follows: |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| (node) _ (node) (node) (node) |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| p —quti•p +(1— |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| quti )•p (win ), |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| where p(win) is the fraction of time slots in the past time window |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| of length Nuti,win where the node has been active over the total |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| number of time slots Nuti,win. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| If the utilization of checkpoints on link i falls below the lower |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| threshold plower, the current base checking period T(i) |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| check will be |XML| xmlLoc_4 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| doubled. Having a low checkpoint utilization can be either because |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| one or both of the nodes have not shown up at all of the checkpoints |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| or because there is not enough user data to be transmitted. In either |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| cases the intensity of checkpoints has to be decreased. Whenever a |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| decrease or increase is performed on link i the measured utilization |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| p(i) must be reset. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Since the parameter T (i)k is one of the inputs to the pseudo ran- |XML| xmlLoc_5 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| chec |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| dom checkpoint generation process, PseudoChkGen the check- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| points after the decrease will be generated according to the new |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| period. Furthermore, due to the special characteristic of the check- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| point generation scheme the remaining checkpoints after the de- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| crease will be a subset of the original checkpoints, which guaran- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tees that the two nodes can sustain communication independent of |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| local changes in checking intensities. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| An example for the checking intensity decrease in case of a node |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| pair A and B is shown in Figure 3. First, node A decreases check- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing intensity by doubling its current base checking period in re- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| sponse to the measured low utilization. As a consequence node B |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| will find node A on average only at every second checkpoint and |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| its measured utilization will decrease rapidly. When the measured |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| utilization at node B falls below the threshold plower, B realizes |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that its peer has a lower checking intensity and follows the de- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| crease by doubling its current base checking period. Although we |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| have not explicitly indicated in the Figure, it is assumed that there |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| has been user data exchanged at each checkpoint where both nodes |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| were present. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| checkpoints of A toward B |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| node A reduces the checking |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| intensity, by doubling its base period	checkpoints of B toward A |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| ρ=0.35<ρlower	ρ=0.2	ρ=0.35	ρ=0.5	ρ=0.65 ρ=0.7 |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| node B realizes the decrease and |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| doubles its base period |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 3: Checking intensity decrease |XML| xmlLoc_1 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Recall from the utilization measurement procedure that there is a |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| minimum number of checkpoints Nsample,min that has to be sam- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| pled before the measured utilization is considered to be confident |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and can be used to decide about checking intensity decrease. The |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| parameter Nsample,min together with the parameter of the mov- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing average method quti determine the time scale over which the |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| utilization of checkpoints has to be above the threshold plower, |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| otherwise the node decreases checking intensity. It might be also |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| reasonable to allow that the parameter Nsample,min and the mov- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing average parameter quti can be changed after each decrease or |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| increase taking into account for example the current checking in- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tensity, the available resources of the node or the amount of user |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| data to be transmitted, etc. However, in the current implementation |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| we apply fixed parameter values. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| After a checkpoint where user data has been exchanged (not only a |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| POLL/NULL packet pair) checking intensity can be increased pro- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| vided that the measured utilization of checkpoints exceeds the up- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| per threshold pupper and the node has available capacity. Formally |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a checking intensity increase is performed on link i if the following |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| two conditions are satisfied: p(i) > pupper and p(node) < piinn T), |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| where pupil r is the upper threshold of the total utilization of the |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| node. This last condition ensures that the intensity of checkpoints |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| will not increase unbounded. The intensity of checkpoints is dou- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bled at each increase by dividing the current length of the base |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checking period T(n,eck by 2. For typical values of pupper we rec- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ommend 0.8 < pupper < 0.9 in which case the respective plower |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| value should be plower < 0.4 in order to avoid oscillation of in- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| creases and decreases. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Figure 4 shows an example where node A and B communicate and |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| after exchanging user data at the second checkpoint both nodes |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| double the checking intensity. In the Figure we have explicitly in- |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| dicated whether there has been user data exchanged at a checkpoint |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| or not. |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 4: Checking intensity increase |XML| xmlLoc_7 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| ρ=0.6ρ=0.5 ρ=0.58ρ=0.48ρ=0.56 ρ=0.46ρ=0.36<ρlower ρ=0.2	ρ=0.35 ρ=0.5 |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| ρ=0.7	ρ=0.8>ρupper ρ=0.2 ρ=0.4	ρ=0.3 ρ=0.55 |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| checking intensity |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| ρ=0.3 |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| ρ=0.55 |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| ρ=0.8>ρupper |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| ρ=0.2 ρ=0.4 |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| checkpoints of A toward B |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| checkpoints of B toward A |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ρ=0.7 |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| user data |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| both node A and B double |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| user data |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| user data	user data |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
sectionHeader ||| 6. REFERENCE ALGORITHMS |XML| xmlLoc_0 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| In this section we define the Ideal Coordinated Scatternet Sched- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| uler (ICSS) and the Uncoordinated Greedy Scatternet Scheduler |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| (UGSS) reference algorithms. The ICSS algorithm represents |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the “ideal” case where nodes exploit all extra information when |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scheduling packet transmissions, which would not be available in a |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| realistic scenario. The UGSS algorithm represents the greedy case |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| where nodes continuously switch among their Bluetooth links in a |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| random order. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 6.1 The ICSS Algorithm |XML| xmlLoc_1 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| The ICSS algorithm is a hypothetical, ideal scheduling algorithm |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| that we use as a reference case in the evaluation of the PCSS |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scheme. In the ICSS algorithm a node has the following extra |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| information about its neighbours, which represents the idealized |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| property of the algorithm: |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
listItem ||| •	a node is aware of the already pre-scheduled transmissions |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
listItem ||| of its neighbours; and |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
listItem ||| •	a node is aware of the content of the transmission buffers of |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
listItem ||| its neighbours. |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| According to the ICSS algorithm each node maintains a scheduling |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| list, which contains the already pre-scheduled tasks of the node. A |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| task always corresponds to one packet pair exchange with a given |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| peer of the node. Knowing the scheduling list of the neighbours |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| allows the node to schedule communication with its neighbours |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| without overlapping their other communication, such that the ca- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| pacity of the nodes is utilized as much as possible. Furthermore |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| being aware of the content of the transmission buffers of neigh- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bours eliminates the inefficiencies of the polling based scheme, |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| since there will be no unnecessary polls and the system will be |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| work-conserving. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In the scheduling list of a node there is at most one packet pair |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| exchange scheduled in relation to each of its peers, provided that |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| there is a Bluetooth packet carrying user data either in the trans- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| mission buffer of the node or in the transmission buffer of the peer |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| or in both. After completing a packet exchange on a given link the |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| two nodes schedule the next packet exchange, provided that there |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is user data to be transmitted in at least one of the directions. If |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| there is user data in only one of the directions, a POLL or NULL |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| packet is assumed for the reverse direction depending on whether |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| it is the master-to-slave or slave-to-master direction, respectively. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The new task is fitted into the scheduling lists of the nodes using |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| a first fit strategy. According to this strategy the task is fitted into |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the first time interval that is available in both of the scheduling lists |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and that is long enough to accommodate the new task. Note that the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| algorithm strives for maximal utilization of node capacity by trying |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to fill in the unused gaps in the scheduling lists. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| If there is no more user data to be transmitted on a previously busy |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| link, the link goes to idle in which case no tasks corresponding to |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the given link will be scheduled until there is user data again in at |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| least one of the directions. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| An example for the scheduling lists of a node pair A and B is shown |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| in Figure 5. The tasks are labeled with the name of the correspond- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing peers the different tasks belong to. Each node has as many |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| pre-scheduled tasks in its scheduling list as the number of its ac- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tive Bluetooth links. A link is considered to be active if there is |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| current time |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| schedule the next packet pair |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| exchange for node A and B |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 5: Example for the scheduling lists of a node pair in case |XML| xmlLoc_1 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figureCaption ||| of the ICSS algorithm |XML| xmlLoc_1 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| user data packet in at least one of the directions. Node A has active |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| peers B and C, while node B has active peers A, D and E. After |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| node A and B have finished the transmission of a packet pair they |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| schedule the next task for the nearest time slots that are available |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in both of their scheduling lists and the number of consecutive free |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| time slots is greater than or equal to the length of the task. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 6.2 The UGSS Algorithm |XML| xmlLoc_3 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| In the UGSS algorithm Bluetooth nodes do not attempt to coordi- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| nate their meeting points, instead each node visits its neighbours |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in a random order. Nodes switch continuously among their Blue- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tooth links in a greedy manner. If the node has n number of links it |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| chooses each of them with a probability of 1/n. The greedy nature |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of the algorithm results in high power consumption of Bluetooth |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| devices. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| If the node is the master on the visited link it polls the slave by |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| sending a packet on the given link. The type of Bluetooth packet |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| sent can be a 1, 3 or 5 slot packet carrying useful data or an empty |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| POLL packet depending on whether there is user data to be trans- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| mitted or not. After the packet has been sent the master remains |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| active on the link in order to receive any response from the slave. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| If the slave has not been active on the given link at the time when |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the master has sent the packet it could not have received the packet |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and consequently it will not send a response to the master. After |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the master has received the response of the slave or if it has sensed |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the link to be idle indicating that no response from the salve can be |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| expected, it selects the next link to visit randomly. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Similar procedure is followed when the node is the slave on the |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| visited link. The slave tunes its receiver to the master and listens |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| for a packet transmission from the master in the current master- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to-slave slot. If the slave has not been addressed by the master |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in the actual master-to-slave slot it immediately goes to the next |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| link. However, if the slave has been addressed it remains active on |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the current link and receives the packet. After having received the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| packet of the master the slave responds with its own packet in the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| following slave-to-master slot. After the slave has sent its response |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| it selects the next link to visit randomly. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 7. SIMULATION RESULTS |XML| xmlLoc_7 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| First, we evaluate the algorithm in a realistic usage scenario, which |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| is the Network Access Point (NAP) scenario. Next we investigate |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| theoretical configurations and obtain asymptotical results that re- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| veals the scaling properties of the algorithm. For instance we in- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| vestigate the carried traffic in function of the number of forwarding |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| peer B |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Dee, C	pear C |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| t |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| peer A |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| ✑peer E	peer E |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| t |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| scheduling list of |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| node A |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| Deer B |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| scheduling list of |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| node B |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Deer A p |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| eer D |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| hops along the path and in function of bridging degree. Both in the |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| realistic and theoretical configurations we relate the performance of |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the PCSS scheme to the performance of the ICSS and UGSS ref- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| erence algorithms. Before presenting the scenarios and simulation |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| results we shortly describe the simulation environment and define |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the performance metrics that are going to be measured during the |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| simulations. |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 7.1 Simulation Environment |XML| xmlLoc_1 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| We have developed a Bluetooth packet level simulator, which is |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| based on the Plasma simulation environment [4]. The simulator |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| has a detailed model of all the packet transmission, reception pro- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| cedures in the Bluetooth Baseband including packet buffering, up- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| per layer packet segmentation/reassemble, the ARQ mechanism, |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| etc. The simulator supports all Bluetooth packet types and follows |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the same master-slave slot structure as in Bluetooth. For the physi- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| cal layer we employ a simplified analytical model that captures the |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| frequency collision effect of interfering piconets. |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In the current simulations the connection establishment procedures, |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| e.g., the inquiry and page procedures are not simulated in detail and |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| we do not consider dynamic scatternet formation either. Instead we |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| perform simulations in static scatternet configurations where the |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scatternet topology is kept constant during one particular run of |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| simulation. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In the current simulations we run IP directly on top of the Blue- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| tooth link layer and we apply AODV as the routing protocol in the |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| IP layer. The simulator also includes various implementations of |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the TCP protocol (we employed RenoPlus) and supports different |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| TCP/IP applications, from which we used TCP bulk data transfer |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in the current simulations. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| One of the most important user perceived performance measures is |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| the achieved throughput. We are going to investigate the throughput |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in case of bulk TCP data transfer and in case of Constant Bit Rate |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| (CBR) sources. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In order to take into account the power consumption of nodes we |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| define activity ratio of a node, ract as the fraction of time when |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the node has been active over the total elapsed time; and power |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| efficiency, pep p as the fraction of the number of user bytes success- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| fully communicated (transmitted and received) over the total time |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the node has been active. The power efficiency shows the num- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ber of user bytes that can be communicated by the node during an |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| active period of length 1 sec. Power efficiency can be measured |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in [kbit/sec], or assuming that being active for 1 sec consumes 1 |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| unit of energy we can get a more straightforward dimension of |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| [kbit/energy unit], which is interpreted as the number of bits that |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| can be transmitted while consuming one unit of energy. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 7.2 Network Access Point Scenario |XML| xmlLoc_6 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| In this scenario we have a NAP that is assumed to be connected to |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| a wired network infrastructure and it provides network access via |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| its Bluetooth radio interface. The NAP acts as a master and up to 7 |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| laptops, all acting as slaves, can connect to the NAP. Furthermore |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| we assume that each laptop has a Bluetooth enabled mouse and |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| each laptop connects to its mouse by forming a new piconet as it is |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| shown in Figure 6. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| We simulate a bulk TCP data transfer from the NAP towards each |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| laptop separately. Regarding the traffic generated by the mouse we |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| assume that the mouse produces a 16 byte long packet each 50 ms, |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 6: Network Access Point Scenario |XML| xmlLoc_1 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| periodically. In the NAP-laptop communication we are interested |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| in the achieved throughput while in the laptop-mouse communi- |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| cation we are concerned with the delay perceived by the mouse. |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In the current scenario we switched off the dynamic checkperiod |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| adjustment capability of the PCSS algorithm and we set the base |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checking period to 32 frames (40 ms), which is in accordance with |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the delay requirement of a mouse. Note that this same base check- |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing period is applied also on the NAP-laptop links, although, there |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is no delay requirement for the TCP traffic. However, the current |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| implementation in the simulator does not yet support the setting of |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the base checking periods for each link separately. The dynamic |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| checking period adjustment would definitely improve the through- |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| put of NAP-laptop communication as we are going to see later in |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| case of other configurations. |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The simulation results are shown in Figure 7. In plot (a) the aver- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| aged throughput of NAP-laptop communications are shown in the |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| function of number of laptops for the different algorithms, respec- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tively. Graph (b) plots the sum of the throughputs between the |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| NAP and all laptops. As we expect, the individual laptop through- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| put decreases as the number of laptops increases. However, it is |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| important to notice that the sum of laptop throughputs do not de- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| crease with increasing number of laptops in case of the PCSS and |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ICSS algorithms. As the number of laptops increases the efficient |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| coordination becomes more important and the total carried traffic |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| will decrease with the uncoordinated UGSS scheme. The increase |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of the total throughput in case of the PCSS algorithm is the conse- |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| quence of the fixed checking intensities, which allocates one half |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of a laptop capacity to the mouse and the other half to the NAP. In |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| case of small number of laptops this prevents the laptops to fully |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| utilize the NAP capacity, which improves as the number of laptops |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| increases. |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The 99% percentile of the delay seen by mouse packets is shown in |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| plot (c). The delay that can be provided with the PCSS algorithm |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is determined by the base checking period that we use. Recall, that |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in the current setup the base checking period of the PCSS scheme |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| was set to 32 frames, which implies that the delay has to be in the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| order of 32 frames, as shown in the figure. The low delay with the |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| UGSS algorithm is due to the continuous switching among the links |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of a node, which ensures high polling intensity within a piconet |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and frequent switching between piconets. The UGSS algorithm |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| provides an unnecessarily low delay, which is less than the delay |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| requirement at the expense of higher power consumption. |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Plots (d) and (e) show the averaged activity ratio over all lap- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| tops and mice, respectively. The considerably higher throughput |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| achieved for small number of laptops by the ICSS scheme explains |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| its higher activity ratio. On graph (f) the averaged power efficiency |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of laptops is shown, which relates the number of bytes transmit- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ted to the total time of activity. The power efficiency of the PCSS |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| mouse |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| mouse |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| NAP |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| laptop	max 7	laptop |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| scheme decreases with increasing number of laptops, which is a |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| consequence of the fixed checking intensities. Since the NAP has |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to share its capacity among the laptops, with an increasing number |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of laptops there will be an increasing number of checkpoints where |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the NAP cannot show up. In such cases the dynamic checking in- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tensity adjustment procedure could help by decreasing checking |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| intensity on the NAP-laptop links. Recall that in the current sce- |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nario we employed fixed checking intensities in order to satisfy the |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| mouse delay requirement. It is also important to notice that with the |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| uncoordinated UGSS scheme the activity ratio of a mouse is rela- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tively high, which is an important drawback considering the low |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| power capabilities of such devices. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 7.3 Impact of Number of Forwarding Hops |XML| xmlLoc_1 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| In what follows, we investigate the performance impact of the num- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| ber of forwarding hops along the communication path in the scat- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ternet configuration shown in Figure 8. The configuration consists |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of a chain of S/M forwarding nodes (Fi) and a certain number of |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| additional node pairs connected to each forwarding node in order to |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| generate background traffic. The number of S/M forwarding nodes |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| is denoted by NF. There are NB number of background node pairs |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| connected to each forwarding node as masters. The background |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| traffic flows from each source node Bz) to its destination pair |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| B(P) through the corresponding forwarding node Fi. The traffic |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| that we are interested in is a bulk TCP data transfer between node |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| S and D. The background traffic is a CBR source, which generates |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| 512 byte long IP packets with a period of length 0.05 sec. |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
none ||| D |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| During the simulations we vary the number of forwarding hops NF |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| and the number of background node pairs NB connected to each |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| forwarding node. As one would expect, with increasing number of |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| forwarding hops and background node pairs the coordinated algo- |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| rithms will perform significantly better than the one without any |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| coordination (UGSS). |XML| xmlLoc_5 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| The throughput of the S-D traffic as a function of the number of |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| forwarding nodes (NF) without background traffic (NB = 0) and |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| with two pairs of background nodes (NB = 2) are shown in Fig- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ure 9 (a) and (b), respectively. The throughput in case of no cross |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| traffic drops roughly by half when we introduce the first forward- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing node. Adding additional forwarding hops continuously reduces |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the throughput, however, the decrease at each step is less drasti- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| cal. We note that in case of the ICSS scheme one would expect |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that for NF > 1 the throughput should not decrease by adding |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| additional forwarding hops. However, there are a number of other |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| effects besides the number of forwarding hops that decrease the |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| throughput. For instance, with an increasing number of forward- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing hops the number of piconets in the same area increases, which, |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in turn, causes an increasing number of lost packets over the radio |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| interface due to frequency collisions. Furthermore with increasing |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| number of hops the end-to-end delay suffered by the TCP flow in- |XML| xmlLoc_7 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| creases, which makes the TCP connection less reactive to recover |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| from packet losses. |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In the no background traffic case the PCSS scheme performs close |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| to the UGSS algorithm in terms of throughput. However, as we |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| introduce two pairs of background nodes the UGSS algorithm fails |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| completely, while the PCSS scheme still achieves approximately 20 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| kbit/sec throughput. Furthermore, the power efficiency of the PCSS |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| scheme is an order of magnitude higher than that of the UGSS algo- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| rithm in both cases, which indicates that the PCSS algorithm con- |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| sumes significantly less power to transmit the same amount of data |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| than the UGSS scheme. |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
subsectionHeader ||| 7.4 Impact of Bridging Degree |XML| xmlLoc_1 xmlAlign_none xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Next we investigate the performance of scheduling algorithms as |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| the number of piconets that a bridging node participates in is in- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| creased. The scatternet setup that we consider is shown in Figure |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| 10, where we are interested in the performance of the bridging node |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| C. Node C is an all slave bridging node and it is connected to mas- |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ter nodes Pi, where the number of these master nodes is denoted |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| by NP. To each master node Pi we connect NL number of leaf |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nodes as slaves in order to generate additional background load in |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the piconets. We introduce bulk TCP data transfer from node C |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| towards each of its master node Pi and CBR background traffic |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| on each Lij — Pi link. The packet generation interval for back- |XML| xmlLoc_3 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| ground sources was set to 0.25 sec, which corresponds to a 16 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| kbit/sec stream. During the simulation we vary the number of pi- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| conets NP participated by node C and investigate the performance |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of the PCSS algorithm with and without dynamic checkpoint inten- |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| sity changes. The number of background nodes NL connected to |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| each master node Pi was set to NL = 3 and it was kept constant in |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the simulations. |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
none ||| LmNL |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| The throughputs of TCP flows between node C and each Pi are av- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| eraged and it is shown in Figure 10 (a). The sum of TCP through- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| puts are plotted in graph (b) and the power efficiency of the central |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| node is shown in graph (c). The PCSS algorithm has been tested |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| both with fixed base checking periods equal to 32 frames (“PCSS- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| 32”) and with dynamic checking intensity changes as well (“PCSS- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| dyn”). The parameter settings of the dynamic case is shown in Ta- |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ble 1. |XML| xmlLoc_6 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| quti = 0.7	Nsample,min = 4 |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
table ||| Plower = 0.3	Pupper = 0.7 |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| quiode)=0.7	Nuti,win = 10	maxe) = 0.8 |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| Tmin = 8	Tmax = 256 |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
tableCaption ||| Table 1: Parameter setting of the dynamic PCSS scheme |XML| xmlLoc_7 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Lmi |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| LNPm |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Pm |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| LNPNL |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PNP |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| C |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figureCaption ||| Figure 10: Impact of number of participated piconets |XML| xmlLoc_5 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 	B(D)	B(D)	B(D). |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 	1i	2i	NF� |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figureCaption ||| Figure 8: Impact of number of forwarding nodes |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| B(S) |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| B(S) |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| F1	F2	FNF |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| S |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| B(S) |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| N. |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| F� |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| (d)	(e)	(f) |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figureCaption ||| Figure 7: Throughput, delay and power measures in the function of number of laptops connected to the NAP |XML| xmlLoc_3 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Activity Ratio of laptops |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Activity Ratio of mice |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Power efficiency of laptops |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| TCP throughput per laptop |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Sum TCP throughput of laptops |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0.99 percentile of mouse dealy |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 1	2	3	4	5	6	7 |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Number of laptops |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 1	2	3	4	5	6	7 |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of laptops |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 1	2	3	4	5	6	7 |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of laptops |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| (a)	(b)	(c) |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| PCSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 500 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 450 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 400 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 350 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 250 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 200 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 150 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 100 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 50 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.06 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0.05 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.04 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.03 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.02 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.01 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 500 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 450 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 400 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 350 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 250 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 200 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 150 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 100 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 50 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 1	2	3	4	5	6	7 |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of laptops |XML| xmlLoc_2 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 1	2	3	4	5	6	7 |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of laptops |XML| xmlLoc_2 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 1	2	3	4	5	6	7 |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of laptops |XML| xmlLoc_2 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 600 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 0.9 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 0.8 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.7 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.6 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.5 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.4 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.3 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.2 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.1 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 500 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.9 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0.8 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.7 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.6 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.5 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.4 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.3 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.2 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0.1 |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 400 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 200 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 100 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| PCSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| TCP throughput without background nodes (N_B=0) |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0	1	2	3	4	5	6	7	8 |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of forwarding nodes (N_F) |XML| xmlLoc_4 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 500 |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 450 |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 400 |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 350 |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 300 |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 250 |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 200 |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 150 |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 100 |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 50 |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0 |XML| xmlLoc_4 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| TCP throughput with 2 pairs of background nodes (N_B=2) |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Power efficiency of forwarding nodes (N_B=2) |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0	1	2	3	4	5	6	7	8 |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Number of forwarding nodes (N_F) |XML| xmlLoc_4 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 0	1	2	3	4	5	6	7	8 |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of forwarding nodes (N_F) |XML| xmlLoc_4 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 200 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 100 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 500 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 450 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 400 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 350 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 250 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 200 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 150 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 100 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 50 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_4 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 600 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 500 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 400 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PCSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| UGSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| (a)	(b)	(c) |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figureCaption ||| Figure 9: Throughput and power efficiency in function of number of forwarding hops |XML| xmlLoc_5 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| It is important to notice that the per flow TCP throughputs in case |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| of the dynamic PCSS scheme matches quite closely the through- |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| put achieved by the ICSS algorithm and it significantly exceeds the |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| throughput that has been achieved by the fixed PCSS. This large |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| difference is due to the relatively low background traffic in the |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| neighbouring piconets of node C, in which case the dynamic PCSS |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| automatically reduces checkpoint intensity on the lightly loaded |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| links and allocates more bandwidth to the highly loaded ones by |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| increasing checking intensity. |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 8. CONCLUSIONS |XML| xmlLoc_6 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| We have presented Pseudo Random Coordinated Scatternet |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Scheduling, an algorithm that can efficiently control communica- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tion in Bluetooth scatternets without exchange of control informa- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tion between Bluetooth devices. The algorithm relies on two key |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| components, namely the use of pseudo random sequences of meet- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ing points, that eliminate systematic collisions, and a set of rules |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that govern the increase and decrease of meeting point intensity |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| without explicit coordination. |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| We have evaluated the performance of PCSS in a number of sim- |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| ulation scenarios, where we have compared throughput and power |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| measures achieved by PCSS to those achieved by two reference |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| schedulers. The first reference scheduler is an uncoordinated |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| greedy algorithm, while the other is a hypothetical “ideal” sched- |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| uler. |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| In all the scenarios investigated we have found that PCSS achieves |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| higher throughput than the uncoordinated reference algorithm. |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Moreover, with the traffic dependent meeting point intensity adjust- |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ments the throughput and power measures of PCSS quite closely |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| match the results of the “ideal” reference algorithm. At the same |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| time PCSS consumes approximately the same amount of power as |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the ideal scheduler to achieve the same throughput, which is sig- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| nificantly less than the power consumption of the uncoordinated |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| reference scheduler. |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| 9. REFERENCES |XML| xmlLoc_7 xmlAlign_justified xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
reference ||| [1] Bluetooth Special Interest Group. Bluetooth Baseband |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
reference ||| Specification Version 1.0 B. http://www.bluetooth.com/. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 11: Throughput and power efficiency in function of the bridging degree of node C |XML| xmlLoc_1 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Averaged TCP throughput between central node and master nodes |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Sum of TCP throughputs at the central node |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Effective power of central node |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 1	2	3	4	5	6 |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Number of piconets participated by the central node (N_P) |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 1	2	3	4	5	6 |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of piconets participated by the central node (N_P) |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 1	2	3	4	5	6 |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Number of piconets participated by the central node (N_P) |XML| xmlLoc_1 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| (a)	(b)	(c) |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| PCSS-3y2 |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| PCSUGSS |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| PCSS-32 |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PCSS-dyn |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| UGSS |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 450 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 400 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 350 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 250 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 200 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 150 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 100 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 50 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 450 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 400 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 350 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 300 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 250 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 200 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 150 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 100 |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 50 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0 |XML| xmlLoc_1 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 600 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 500 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 400 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 300 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 200 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 100 |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 0 |XML| xmlLoc_1 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| PCSS-32 |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| P	y UGG |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| ICSS |XML| xmlLoc_0 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
reference ||| [2] Bluetooth Special Interest Group. |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
reference ||| http://www.bluetooth.com/. |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| [3] J. Haartsen. BLUETOOTH- the universal radio interface for |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
reference ||| ad-hoc, wireless connectivity. Ericsson Review, (3), 1998. |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| [4] Z. Haraszti, I. Dahlquist, A. Farag´o, and T. Henk. Plasma - |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
reference ||| an integrated tool for ATM network operation. In Proc. |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| International Switching Symposium, 1995. |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| [5] N. Johansson, U. K¨orner, and P. Johansson. Performance |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
reference ||| evaluation of scheduling algorithms for Bluetooth. In IFIP |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| TC6 WG6.2 Fifth International Conference on Broadband |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_yes xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
reference ||| Communications (BC’99), Hong Kong, November 1999. |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
reference ||| [6] N. Johansson, U. K¨orner, and L. Tassiulas. A distributed |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
reference ||| scheduling algorithm for a Bluetooth scatternet. In Proc. of |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| The Seventeenth International Teletraffic Congress, ITC’17, |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_yes xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
reference ||| Salvador da Bahia, Brazil, September 2001. |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
reference ||| [7] P. Johansson, N. Johansson, U. K¨orner, J. Elgg, and |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
reference ||| G. Svennarp. Short range radio based ad hoc networking: |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| Performance and properties. In Proc. ofICC’99, Vancouver, |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| 1999. |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| [8] M. Kalia, D. Bansal, and R. Shorey. MAC scheduling and |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
reference ||| SAR policies for Bluetooth: A master driven TDD |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| pico-cellular wireless system. In IEEE Mobile Multimedia |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| Communications Conference MOMUC’99, San Diego, |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| November 1999. |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| [9] M. Kalia, D. Bansal, and R. Shorey. MAC scheduling |XML| xmlLoc_5 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
reference ||| policies for power optimization in Bluetooth: A master |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| driven TDD wireless system. In IEEE Vehicular Technology |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| Conference 2000, Tokyo, 2000. |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_yes bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| [10] M. Kalia, S. Garg, and R. Shorey. Efficient policies for |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
reference ||| increasing capacity in Bluetooth: An indoor pico-cellular |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| wireless system. In IEEE Vehicular Technology Conference |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
reference ||| 2000, Tokyo, 2000. |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
sectionHeader ||| APPENDIX |XML| xmlLoc_7 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_larger xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Here, we present the procedure for generating the pseudo ran- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| dom sequence of checkpoints, where we reuse the elements of |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the pseudo random frequency hop generation procedure available |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| in Bluetooth. The inputs to the checkpoint generation procedure |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| PseudoChkGen are the current checking period T(h ck, the Blue- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tooth MAC address of the slave As`ave and the current value of the |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| master’s clock t(i). A node can perform checkpoint generation us- |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| ing the PseudoChkGen procedure at any point in time, it is al- |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ways guaranteed that the position of checkpoint generated by the |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| two nodes will be the same, as it has been pointed out in Section |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| 5.1. Nevertheless the typical case will be that whenever a node ar- |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| rives to a checkpoint it generates the position of the next checkpoint |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| on the given link. The variable t(i)cysstores the master’s |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| chek |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| clock at the next checkpoint, thus it needs to be updated every time |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| a checkpoint is passed. Here we note that the Bluetooth clock of a |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| device is a 28 bit counter, where the LSB changes at every half slot. |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Let us assume that the base period of checkpoints on the it h link of |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| the node is Tcheck = 2j-2, j > 2 number of frames, which means |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| that there is one pseudo randomly positioned checkpoint in each |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| consecutive time interval of length T(h ck and the jth bit of the |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Bluetooth clock changes at every Tcheck. Upon arrival to a check- |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| point the variable t(i) |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| check equals to the current value of the master’s |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| clock on that link. After the checkpoint generation procedure has |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| been executed the variable tcheck will store the master’s clock at |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the time of the next checkpoint on that link. |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Before starting the procedure the variable tch)eck is set to the cur- |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| rent value of the master’s clock t(i) in order to cover the general |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| case when at the time of generating the next checkpoint the value |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of t(i) |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_largest-1 xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| check does not necessarily equals to the current value of the |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| master’s clock t(i). The position of the next checkpoint is ob- |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| tained such that the node first adds the current value of Tcheck |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| to the variable tclzeck, clears the bits [j — 1, ... , 0] of tch)eck and |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| then generates the bits [j — 1, ... , 2] one by one using the pro- |XML| xmlLoc_5 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| cedure PseudoBitGen(X, WctT`). When generating the kth bit |XML| xmlLoc_5 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| (j-1 < k < 2) the clock bits X = tcheck [k+1, ... , k+5] are fed |XML| xmlLoc_6 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| as inputs to the PseudoBitGen procedure, while the control word |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| WctT` is derived from tcheck including the bits already generated |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| and from the MAC address of the slave As`ave. The schematic view |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| of generating the clock bits of the next checkpoint is illustrated in |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| Figure 12. |XML| xmlLoc_6 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figureCaption ||| Figure 12: Generating the clock bits of the next checkpoint |XML| xmlLoc_7 xmlAlign_left xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 28. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 27. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Wctrl |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| k+5. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PseudoBitGen |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| X |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| k+1. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| k. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 2. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 1. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 0. |XML| xmlLoc_7 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| The PseudoBitGen procedure is based on the pseudo random |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| scheme used for frequency hop selection in Bluetooth. How- |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ever, before presenting the PseudoBitGen procedure we give the |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| pseudo-code of the PseudoChkGen procedure. |XML| xmlLoc_0 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| PseudoChkGen procedure: |XML| xmlLoc_0 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| t(i): the current value of the master’s clock; |XML| xmlLoc_0 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Tcheck = 2j-2, j > 2: current length of the base checkperiod |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
bodyText ||| in terms of number of frames. |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| (i)	(i) |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_largest0 xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| tcheck = t |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| (i)tcheck [j — 1, . . . , 0] = 0; |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| t(i)= t(i)	+T(i) |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_largest0 xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| check	check	check; |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| k=j—1; |XML| xmlLoc_1 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| while (k > 2) |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
equation ||| X[0, ... , 4] = t(i) |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| check [k + 1,... , k + 5]; |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
equation ||| tcheck[k] =PseudoBitGen(X,WctTd); |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
equation ||| k=k-1; |XML| xmlLoc_2 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
equation ||| end |XML| xmlLoc_2 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| Finally, we discuss the PseudoBitGen procedure, which is illus- |XML| xmlLoc_2 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| trated in Figure 13. |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| Z[0] |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
figureCaption ||| Figure 13: The PseudoBitGen procedure |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| P[13,12] P[11,10] P[9,8]	P[7,6]	P[5,4]	P[3,2] P[1,0] |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| B |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| A |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| D |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 5 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| C |XML| xmlLoc_3 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 5 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 5 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 9 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| Add |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| mod 32 |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| 5 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| Y |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| PERM5 |XML| xmlLoc_3 xmlAlign_centered xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| bit selector |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| V[k mod 5] |XML| xmlLoc_3 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| X |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| O |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| R |XML| xmlLoc_3 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
figure ||| Z |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| X  5 |XML| xmlLoc_3 xmlAlign_right xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_right bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 5 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_none bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
figure ||| 5 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| V |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| 1 |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figure ||| O |XML| xmlLoc_3 xmlAlign_none xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_new
figureCaption ||| Figure 14: Butterfly permutation |XML| xmlLoc_4 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_yes xmlCell_no xmlBullet_no bi_xmlA_left bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| The control words of the PseudoBitGen procedure |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| WctTd = {A, B, C, D} are the same as the control words of |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| the frequency hop selection scheme in Bluetooth and they are |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| shown in Table 2. However, the input X and the additional |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bit selection operator at the end are different. As it has been |XML| xmlLoc_4 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| discussed above the input X is changing depending on which |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bit of the checkpoint is going to be generated. When gener- |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| ating the kth clock bit of the next checkpoint the clock bits |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| X = tcheck [k + 1,... , k + 5] are fed as inputs and the bit |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| selection operator at the end selects the (k mod 5)th bit of the 5 |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| bits long output V. |XML| xmlLoc_5 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| A	Asdave [27 — 23] ® tcheck [25 — 21] |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_left bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
table ||| B	B[0 — 3] = Asdave[22 — 19], B[4] =		0 |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| C	Asdave [8, 6, 4, 2, 0] ® t(i)	— 16] |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| 	check [20 |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| D	Asdave[18 — 10] ® t(i)	— 7] |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
table ||| 	check [15 |XML| xmlLoc_6 xmlAlign_left xmlBold_no xmlItalic_no xmlFontSize_none xmlDd_no xmlCell_yes xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
tableCaption ||| Table 2: Control words |XML| xmlLoc_6 xmlAlign_centered xmlBold_yes xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_centered bi_xmlF_new bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| The operation PERM5 is a butterfly permutation, which is the |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_justified bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_new
bodyText ||| same as in the frequency hop selection scheme of Bluetooth and |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| it is described in Figure 14. Each bit of the control word P is |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| associated with a given bit exchange in the input word. If the |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| given bit of the control word equals to 1 the corresponding bit ex- |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| change is performed otherwise skipped. The control word P is |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_common xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
bodyText ||| obtained from C and D, such that P[i] = D[i], i = 0... 8 and |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_new bi_xmlSFBI_new bi_xmlSFBIA_new bi_xmlPara_same
bodyText ||| P[j + 9] = C[j], j = 0 ... 4. |XML| xmlLoc_7 xmlAlign_justified xmlBold_no xmlItalic_no xmlFontSize_smaller xmlDd_no xmlCell_no xmlBullet_no bi_xmlA_same bi_xmlF_same bi_xmlSF_same bi_xmlSFBI_same bi_xmlSFBIA_same bi_xmlPara_same
