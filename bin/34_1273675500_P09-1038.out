<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="100401">
<algorithm name="ParsHed" version="100401">
<variant no="0" confidence="0.624282">
<title confidence="0.9917615">Phrase-Based Statistical Machine Translation as a Traveling Salesman Problem</title>
<author confidence="0.993064">Mikhail Zaslavskiy Marc Dymetman Nicola Cancedda</author>
<affiliation confidence="0.663352">Mines ParisTech, Institut Curie Xerox Research Centre Europe</affiliation>
<address confidence="0.998607">77305 Fontainebleau, France 38240 Meylan, France</address>
<email confidence="0.997371">mikhail.zaslavskiy@ensmp.fr{marc.dymetman,nicola.cancedda}@xrce.xerox.com</email>
<abstract confidence="0.998040391304348">An efficient decoding algorithm is a crucial element of any statistical machine translation system. Some researchers have noted certain similarities between SMT decoding and the famous Traveling Salesman Problem; in particular (Knight, 1999) has shown that any TSP instance can be mapped to a sub-case of a word-based SMT model, demonstrating NP-hardness of the decoding task. In this paper, we focus on the reverse mapping, showing that any phrase-based SMT decoding problem can be directly reformulated as a TSP. The transformation is very natural, deepens our understanding of the decoding problem, and allows direct use of any of the powerful existing TSP solvers for SMT decoding. We test our approach on three datasets, and compare a TSP-based decoder to the popular beam-search algorithm. In all cases, our method provides competitive or better performance</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="100401">
<citationList>
<citation valid="true">
<authors>
<author>David L Applegate</author>
<author>Robert E Bixby</author>
<author>Vasek Chvatal</author>
<author>William J Cook</author>
</authors>
<title>Concorde tsp solver</title>
<date>2005</date>
<note>http://www.tsp.gatech.edu/ concorde.html</note>
<contexts>
<context position="11960" citStr="Applegate et al., 2005" startWordPosition="1986" endWordPosition="1990">e too much place. Interested readers may consult (Applegate et al., 2007; Gutin, 2003) for good introductions. One of the best existing TSP solvers is implemented in the open source Concorde package (Applegate et al., 2005). Concorde includes the fastest exact algorithm and one of the most efficient implementations of the Lin-Kernighan (LK) heuristic for finding an approximate solution. LK works by generating an initial</context>
</contexts>
<marker>Applegate, Bixby, Chvatal, Cook, 2005</marker>
<rawString>David L. Applegate, Robert E. Bixby, Vasek Chvatal, and William J. Cook. 2005. Concorde tsp solver. http://www.tsp.gatech.edu/ concorde.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David L Applegate</author>
<author>Robert E Bixby</author>
<author>Vasek Chvatal</author>
<author>William J Cook</author>
</authors>
<title>The Traveling Salesman Problem: A Computational Study (Princeton Series in Applied Mathematics)</title>
<date>2007</date>
<publisher>Princeton University Press</publisher>
<contexts>
<context position="9971" citStr="Applegate et al., 2007" startWordPosition="1626" endWordPosition="1629">exactly once. AGTSP. The Asymmetric Generalized TSP, or AGTSP: similar to the SGTSP, but G is now a directed graph. The STSP is often simply denoted TSP in the literature, and is known to be NP-hard (Applegate et al., 2007); however there has been enormous interest in developing efficient solvers for it, both exact and approximate. Most of existing algorithms are designed for STSP, but ATSP, SGTSP and AGTSP may be reduc</context>
<context position="11497" citStr="Applegate et al., 2007" startWordPosition="1907" endWordPosition="1911">ch edges in the cluster, that is, it will produce an encoding of some feasible tour of the AGTSP problem. As for the transformation ATSP—*STSP, several variants are described in the literature, e.g. (Applegate et al., 2007, p. 126); the one we use is from (Wikipedia, 2009) (not illustrated here for lack of space). 3.2 TSP algorithms TSP is one of the most studied problems in combinatorial optimization, and even a brief</context>
<context position="12647" citStr="Applegate et al., 2007" startWordPosition="2103" endWordPosition="2106">ewhat 335 reminiscent of the Greedy decoding of (Germann et al., 2001), but in LK several transformations can be applied simultaneously, so that the risk of being stuck in a local optimum is reduced (Applegate et al., 2007, chapter 15). As will be shown in the next section, phrase- based SMT decoding can be directly reformulated as an AGTSP. Here we use Concorde through first transforming AGTSP into STSP, but it might </context>
</contexts>
<marker>Applegate, Bixby, Chvatal, Cook, 2007</marker>
<rawString>David L. Applegate, Robert E. Bixby, Vasek Chvatal, and William J. Cook. 2007. The Traveling Salesman Problem: A Computational Study (Princeton Series in Applied Mathematics). Princeton University Press, January.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Luciana Buriol</author>
<author>Paulo M Franc¸a</author>
<author>Pablo Moscato</author>
</authors>
<title>A new memetic algorithm for the asymmetric traveling salesman problem</title>
<date>2004</date>
<journal>Journal of Heuristics</journal>
<volume>10</volume>
<marker>Buriol, Franc¸a, Moscato, 2004</marker>
<rawString>Luciana Buriol, Paulo M. Franc¸a, and Pablo Moscato. 2004. A new memetic algorithm for the asymmetric traveling salesman problem. Journal of Heuristics, 10(5):483–506.</rawString>
</citation>
<citation valid="true">
<date>2008</date>
<booktitle>Proceedings of the Third Workshop on SMT. ACL</booktitle>
<editor>Chris Callison-Burch, Philipp Koehn, Christof Monz, Josh Schroeder, and Cameron Shaw Fordyce, editors</editor>
<location>Columbus, Ohio</location>
<marker>2008</marker>
<rawString>Chris Callison-Burch, Philipp Koehn, Christof Monz, Josh Schroeder, and Cameron Shaw Fordyce, editors. 2008. Proceedings of the Third Workshop on SMT. ACL, Columbus, Ohio, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ulrich Germann</author>
<author>Michael Jahr</author>
<author>Kevin Knight</author>
<author>Daniel Marcu</author>
</authors>
<title>Fast decoding and optimal decoding for machine translation. In</title>
<date>2001</date>
<booktitle>In Proceedings ofACL 39</booktitle>
<pages>228--235</pages>
<contexts>
<context position="5747" citStr="Germann et al., 2001" startWordPosition="918" endWordPosition="921">ing presents some shortcomings. A first one is that prefixes obtained by translating different subsets of source words compete against one another. In one early formulation of stack decoding for SMT (Germann et al., 2001), the authors indeed proposed to lazily create one stack for each subset of source words, but acknowledged issues with the potential combinatorial explosion in the number of stacks. This problem is re</context>
<context position="7625" citStr="Germann et al., 2001" startWordPosition="1220" endWordPosition="1223">T decoding is NP-hard. Following this work, the existence of many efficient TSP algorithms then inspired certain adaptations of the underlying techniques to SMT decoding for word-based models. Thus, (Germann et al., 2001) adapt a TSP sub- tour elimination strategy to an IBM-4 model, using generic Integer Programming techniques. The paper comes close to a TSP formulation of decoding with IBM-4 models, but does not purs</context>
<context position="12495" citStr="Germann et al., 2001" startWordPosition="2077" endWordPosition="2080"> current tour and an ordered subset of k edges not included in the tour such that when they are swapped the objective function is improved. This is somewhat 335 reminiscent of the Greedy decoding of (Germann et al., 2001), but in LK several transformations can be applied simultaneously, so that the risk of being stuck in a local optimum is reduced (Applegate et al., 2007, chapter 15). As will be shown in the next sect</context>
<context position="30835" citStr="Germann et al., 2001" startWordPosition="5257" endWordPosition="5260">own that any Traveling Salesman Problem may be reformulated as an instance of a (simplistic) SMT decoding task, and while certain techniques used for TSP were then adapted to word-based SMT decoding (Germann et al., 2001; Tillmann and Ney, 2003; Tillmann, 2006), we are not aware of any previous work that shows that SMT decoding can be directly reformulated as a TSP. Beside the general interest of this transformation </context>
</contexts>
<marker>Germann, Jahr, Knight, Marcu, 2001</marker>
<rawString>Ulrich Germann, Michael Jahr, Kevin Knight, and Daniel Marcu. 2001. Fast decoding and optimal decoding for machine translation. In In Proceedings ofACL 39, pages 228–235.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregory Gutin</author>
<author>Daniel Karapetyan</author>
<author>Krasnogor Natalio</author>
</authors>
<title>Memetic algorithm for the generalized asymmetric traveling salesman problem</title>
<date>2008</date>
<booktitle>In NICSO 2007</booktitle>
<pages>199--210</pages>
<publisher>Springer</publisher>
<location>Berlin</location>
<contexts>
<context position="32261" citStr="Gutin et al., 2008" startWordPosition="5488" endWordPosition="5491">ge for ATSP (Johnson et al., 2002) might well prove superior. There is also active research around AGTSP algorithms. Recently new effective methods based on a “memetic” strategy (Buriol et al., 2004; Gutin et al., 2008) have been put forward. These methods combined with our proposed formulation provide ready-to-use SMT decoders, which it will be interesting to compare. Acknowledgments Thanks to Vassilina Nikoulina f</context>
</contexts>
<marker>Gutin, Karapetyan, Natalio, 2008</marker>
<rawString>Gregory Gutin, Daniel Karapetyan, and Krasnogor Natalio. 2008. Memetic algorithm for the generalized asymmetric traveling salesman problem. In NICSO 2007, pages 199–210. Springer Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Gutin</author>
</authors>
<title>Travelling salesman and related problems</title>
<date>2003</date>
<booktitle>In Handbook of Graph Theory</booktitle>
<contexts>
<context position="11823" citStr="Gutin, 2003" startWordPosition="1965" endWordPosition="1966">SP is one of the most studied problems in combinatorial optimization, and even a brief review of existing approaches would take too much place. Interested readers may consult (Applegate et al., 2007; Gutin, 2003) for good introductions. One of the best existing TSP solvers is implemented in the open source Concorde package (Applegate et al., 2005). Concorde includes the fastest exact algorithm and one of the </context>
</contexts>
<marker>Gutin, 2003</marker>
<rawString>G. Gutin. 2003. Travelling salesman and related problems. In Handbook of Graph Theory.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hieu Hoang</author>
<author>Philipp Koehn</author>
</authors>
<title>Design of the Moses decoder for statistical machine translation</title>
<date>2008</date>
<booktitle>In ACL 2008 Software workshop</booktitle>
<pages>58--65</pages>
<publisher>ACL</publisher>
<location>Columbus, Ohio</location>
<contexts>
<context position="4878" citStr="Hoang and Koehn, 2008" startWordPosition="781" endWordPosition="784">coding, but is also practically convenient: in the same amount of time, off-the-shelf TSP solvers can find higher scoring solutions than the state-of-the art beam-search decoder implemented in Moses (Hoang and Koehn, 2008). 2 Related work Beam-search decoding In beam-search decoding, candidate translation prefixes are iteratively extended with new phrases. In its most widespread variant, stack decoding, prefixes obtain</context>
</contexts>
<marker>Hoang, Koehn, 2008</marker>
<rawString>Hieu Hoang and Philipp Koehn. 2008. Design of the Moses decoder for statistical machine translation. In ACL 2008 Software workshop, pages 58–65, Columbus, Ohio, June. ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D S Johnson</author>
<author>G Gutin</author>
<author>L A McGeoch</author>
<author>A Yeo</author>
<author>W Zhang</author>
<author>A Zverovich</author>
</authors>
<title>Experimental analysis of heuristics for the atsp. In The Travelling Salesman Problem and Its Variations</title>
<date>2002</date>
<pages>445--487</pages>
<contexts>
<context position="32076" citStr="Johnson et al., 2002" startWordPosition="5458" endWordPosition="5461">nce, it might prove better to use directly algorithms expressly designed for ATSP or AGTSP. For instance, some of the algorithms tested in the context of the DIMACS implementation challenge for ATSP (Johnson et al., 2002) might well prove superior. There is also active research around AGTSP algorithms. Recently new effective methods based on a “memetic” strategy (Buriol et al., 2004; Gutin et al., 2008) have been put </context>
</contexts>
<marker>Johnson, Gutin, McGeoch, Yeo, Zhang, Zverovich, 2002</marker>
<rawString>D.S. Johnson, G. Gutin, L.A. McGeoch, A. Yeo, W. Zhang, and A. Zverovich. 2002. Experimental analysis of heuristics for the atsp. In The Travelling Salesman Problem and Its Variations, pages 445–487.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony C Kam</author>
<author>Gary E Kopec</author>
</authors>
<title>Document image decoding by heuristic search</title>
<date>1996</date>
<journal>IEEE Transactions on Pattern Analysis and Machine Intelligence</journal>
<pages>18--945</pages>
<contexts>
<context position="30164" citStr="Kam and Kopec, 1996" startWordPosition="5144" endWordPosition="5147"> related to b as we described in section 4. 1, and then we recompute the optimal tour. Iterating this procedure provably converges to an optimal solution. This powerful method, which was proposed in (Kam and Kopec, 1996; Popat et al., 2001) in the context of a finite-state model (but not of TSP), can be easily extended to N-gram situations, and typically converges in a small number of iterations. 7 Conclusion The ma</context>
</contexts>
<marker>Kam, Kopec, 1996</marker>
<rawString>Anthony C. Kam and Gary E. Kopec. 1996. Document image decoding by heuristic search. IEEE Transactions on Pattern Analysis and Machine Intelligence, 18:945–950.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin Knight</author>
</authors>
<title>Decoding complexity in wordreplacement translation models</title>
<date>1999</date>
<journal>Computational Linguistics</journal>
<pages>25--607</pages>
<contexts>
<context position="562" citStr="Knight, 1999" startWordPosition="65" endWordPosition="66">thm is a crucial element of any statistical machine translation system. Some researchers have noted certain similarities between SMT decoding and the famous Traveling Salesman Problem; in particular (Knight, 1999) has shown that any TSP instance can be mapped to a sub-case of a word-based SMT model, demonstrating NP-hardness of the decoding task. In this paper, we focus on the reverse mapping, showing that any</context>
<context position="7286" citStr="Knight, 1999" startWordPosition="1165" endWordPosition="1166"> the beginning. All these reasons motivate considering alternative decoding strategies. Word-based SMT and the TSP As already mentioned, the similarity between SMT decoding and TSP was recognized in (Knight, 1999), who focussed on showing that any TSP can be reformulated as a sub-class of the SMT decoding problem, proving that SMT decoding is NP-hard. Following this work, the existence of many efficient TSP al</context>
<context position="30598" citStr="Knight, 1999" startWordPosition="5219" endWordPosition="5220">is paper has been to propose a transformation for an arbitrary phrase- based SMT decoding instance into a TSP instance. While certain similarities of SMT decoding and TSP were already pointed out in (Knight, 1999), where it was shown that any Traveling Salesman Problem may be reformulated as an instance of a (simplistic) SMT decoding task, and while certain techniques used for TSP were then adapted to word-bas</context>
</contexts>
<marker>Knight, 1999</marker>
<rawString>Kevin Knight. 1999. Decoding complexity in wordreplacement translation models. Computational Linguistics, 25:607–615.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Franz Josef Och</author>
<author>Daniel Marcu</author>
</authors>
<title>Statistical phrase-based translation</title>
<date>2003</date>
<booktitle>In NAACL 2003</booktitle>
<pages>48--54</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics</institution>
<location>Morristown, NJ, USA</location>
<contexts>
<context position="1242" citStr="Koehn et al., 2003" startWordPosition="176" endWordPosition="179">oach on three datasets, and compare a TSP-based decoder to the popular beam-search algorithm. In all cases, our method provides competitive or better performance. 1 Introduction Phrase-based systems (Koehn et al., 2003) are probably the most widespread class of Statistical Machine Translation systems, and arguably one of the most successful. They use aligned sequences of words, called biphrases, as building blocks f</context>
<context position="25150" citStr="Koehn et al., 2003" startWordPosition="4271" endWordPosition="4274">o those with bigrams. 5.2 Translation experiments with a bigram language model In this section we consider two real translation tasks, namely, translation from English to French, trained on Europarl (Koehn et al., 2003) and translation from German to Spanish training on the NewsCommentary corpus. For Europarl, the training set includes 2.81 million sentences, and the test set 500. For NewsCommentary the training set</context>
</contexts>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>Philipp Koehn, Franz Josef Och, and Daniel Marcu. 2003. Statistical phrase-based translation. In NAACL 2003, pages 48–54, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Lopez</author>
</authors>
<title>Statistical machine translation</title>
<date>2008</date>
<journal>ACM Comput. Surv</journal>
<volume>40</volume>
<contexts>
<context position="2989" citStr="Lopez, 2008" startWordPosition="474" endWordPosition="475"> in the candidate translation deviates from their order in the source sentence. Given such a model, where the �Z’s have been tuned on a development set in order to minimize some error rate (see e.g. (Lopez, 2008)), together with a library of biphrases extracted from some large training corpus, a decoder implements the actual search among alternative translations: (a*, T*) = arg max (a,T) The decoding problem </context>
</contexts>
<marker>Lopez, 2008</marker>
<rawString>Adam Lopez. 2008. Statistical machine translation. ACM Comput. Surv., 40(3):1–49.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Noon</author>
<author>J C Bean</author>
</authors>
<title>An efficient transformation of the generalized traveling salesman problem</title>
<date>1993</date>
<journal>INFOR</journal>
<pages>39--44</pages>
<contexts>
<context position="10339" citStr="Noon and Bean, 1993" startWordPosition="1685" endWordPosition="1688">ned for STSP, but ATSP, SGTSP and AGTSP may be reduced to STSP, and therefore solved by STSP algorithms. 3.1 Reductions AGTSP—*ATSP—*STSP The transformation of the AGTSP into the ATSP, introduced by (Noon and Bean, 1993)), is illustrated in Figure (1). In this diagram, we assume that Y1, ... , YK are the nodes of a given cluster, while X and Z are arbitrary nodes belonging to other clusters. In the transformed graph,</context>
</contexts>
<marker>Noon, Bean, 1993</marker>
<rawString>C. Noon and J.C. Bean. 1993. An efficient transformation of the generalized traveling salesman problem. INFOR, pages 39–44.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kishore Papineni</author>
<author>Salim Roukos</author>
<author>Todd Ward</author>
<author>Wei J Zhu</author>
</authors>
<title>BLEU: a Method for Automatic Evaluation of Machine Translation</title>
<date>2001</date>
<tech>IBM Research Report, RC22176</tech>
<contexts>
<context position="22645" citStr="Papineni et al., 2001" startWordPosition="3850" endWordPosition="3853"> procedure is to plot its value versus the elapsed time. The sec3 Both TSP decoders may be used with/or without a distortion limit; in our experiments we do not use this parameter. ond score is BLEU (Papineni et al., 2001), computed between the reconstructed and the original sentences, which allows us to check how well the quality of reconstruction correlates with the internal score. The training dataset for learning t</context>
</contexts>
<marker>Papineni, Roukos, Ward, Zhu, 2001</marker>
<rawString>Kishore Papineni, Salim Roukos, Todd Ward, and Wei J. Zhu. 2001. BLEU: a Method for Automatic Evaluation of Machine Translation. IBM Research Report, RC22176.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kris Popat</author>
<author>Daniel H Greene</author>
<author>Justin K Romberg</author>
<author>Dan S Bloomberg</author>
</authors>
<title>Adding linguistic constraints to document image decoding: Comparing the iterated complete path and stack algorithms</title>
<date>2001</date>
<contexts>
<context position="30185" citStr="Popat et al., 2001" startWordPosition="5148" endWordPosition="5151">escribed in section 4. 1, and then we recompute the optimal tour. Iterating this procedure provably converges to an optimal solution. This powerful method, which was proposed in (Kam and Kopec, 1996; Popat et al., 2001) in the context of a finite-state model (but not of TSP), can be easily extended to N-gram situations, and typically converges in a small number of iterations. 7 Conclusion The main contribution of th</context>
</contexts>
<marker>Popat, Greene, Romberg, Bloomberg, 2001</marker>
<rawString>Kris Popat, Daniel H. Greene, Justin K. Romberg, and Dan S. Bloomberg. 2001. Adding linguistic constraints to document image decoding: Comparing the iterated complete path and stack algorithms.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christoph Tillmann</author>
<author>Hermann Ney</author>
</authors>
<title>Word reordering and a dynamic programming beam search algorithm for statistical machine translation</title>
<date>2003</date>
<journal>Comput. Linguist</journal>
<volume>29</volume>
<contexts>
<context position="8289" citStr="Tillmann and Ney, 2003" startWordPosition="1331" endWordPosition="1334">ng”. By employing generic IP techniques, it is however impossible to rely on the variety of more efficient both exact and approximate approaches which have been designed specifically for the TSP. In (Tillmann and Ney, 2003) and (Tillmann, 2006), the authors modify a certain Dynamic Programming technique used for TSP for use with an IBM- 4 word-based model and a phrase-based model respectively. However, to our knowledge,</context>
<context position="30859" citStr="Tillmann and Ney, 2003" startWordPosition="5261" endWordPosition="5264"> Salesman Problem may be reformulated as an instance of a (simplistic) SMT decoding task, and while certain techniques used for TSP were then adapted to word-based SMT decoding (Germann et al., 2001; Tillmann and Ney, 2003; Tillmann, 2006), we are not aware of any previous work that shows that SMT decoding can be directly reformulated as a TSP. Beside the general interest of this transformation for understanding decodi</context>
</contexts>
<marker>Tillmann, Ney, 2003</marker>
<rawString>Christoph Tillmann and Hermann Ney. 2003. Word reordering and a dynamic programming beam search algorithm for statistical machine translation. Comput. Linguist., 29(1):97–133.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christoph Tillmann</author>
</authors>
<title>Efficient Dynamic Programming Search Algorithms For Phrase-Based SMT</title>
<date>2006</date>
<booktitle>In Workshop On Computationally Hard Problems And Joint Inference In Speech And Language Processing</booktitle>
<contexts>
<context position="8310" citStr="Tillmann, 2006" startWordPosition="1336" endWordPosition="1337">techniques, it is however impossible to rely on the variety of more efficient both exact and approximate approaches which have been designed specifically for the TSP. In (Tillmann and Ney, 2003) and (Tillmann, 2006), the authors modify a certain Dynamic Programming technique used for TSP for use with an IBM- 4 word-based model and a phrase-based model respectively. However, to our knowledge, none of these works </context>
<context position="30876" citStr="Tillmann, 2006" startWordPosition="5265" endWordPosition="5266"> reformulated as an instance of a (simplistic) SMT decoding task, and while certain techniques used for TSP were then adapted to word-based SMT decoding (Germann et al., 2001; Tillmann and Ney, 2003; Tillmann, 2006), we are not aware of any previous work that shows that SMT decoding can be directly reformulated as a TSP. Beside the general interest of this transformation for understanding decoding, it also opens</context>
</contexts>
<marker>Tillmann, 2006</marker>
<rawString>Christoph Tillmann. 2006. Efficient Dynamic Programming Search Algorithms For Phrase-Based SMT. In Workshop On Computationally Hard Problems And Joint Inference In Speech And Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wikipedia</author>
</authors>
<title>Travelling Salesman Problem — Wikipedia, The Free Encyclopedia. [Online</title>
<date>2009</date>
<note>accessed 5-May-2009</note>
<contexts>
<context position="11548" citStr="Wikipedia, 2009" startWordPosition="1920" endWordPosition="1921">ding of some feasible tour of the AGTSP problem. As for the transformation ATSP—*STSP, several variants are described in the literature, e.g. (Applegate et al., 2007, p. 126); the one we use is from (Wikipedia, 2009) (not illustrated here for lack of space). 3.2 TSP algorithms TSP is one of the most studied problems in combinatorial optimization, and even a brief review of existing approaches would take too much </context>
</contexts>
<marker>Wikipedia, 2009</marker>
<rawString>Wikipedia. 2009. Travelling Salesman Problem — Wikipedia, The Free Encyclopedia. [Online; accessed 5-May-2009].</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>